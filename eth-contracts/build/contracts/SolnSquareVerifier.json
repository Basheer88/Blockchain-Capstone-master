{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x01ffc9a7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x081812fc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x15070401"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x17d7de7c"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x27dc297e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2f745c59"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x38bbfa50"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x40c10f19"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42842e0e"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getbaseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x447ec2b7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4f6ccce7"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x621e9ec0"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x8456cb59"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa22cb465"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xb187bd26"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb88d4fde"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc87b56dd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe985e9c5"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "solutionsIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "solutionsAdd",
          "type": "address"
        }
      ],
      "name": "Added",
      "type": "event",
      "signature": "0x8ba5cdc385bc6c37c9a05ad09fbc238589c43602f4cee09c46856027df8a935a"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "s",
          "type": "string"
        }
      ],
      "name": "Verified",
      "type": "event",
      "signature": "0x3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e39"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event",
      "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "personPaused",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event",
      "signature": "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "personUnpaused",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event",
      "signature": "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "TransferOwnership",
      "type": "event",
      "signature": "0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recievedIndex",
          "type": "uint256"
        },
        {
          "name": "recievedAddress",
          "type": "address"
        }
      ],
      "name": "addSolution",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xccd0ef69"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "newMint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xc4cf6908"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e1576000357c010000000000000000000000000000000000000000000000000000000090048063621e9ec011610116578063b187bd26116100b4578063c87b56dd1161008e578063c87b56dd14610e4c578063ccd0ef6914610ef3578063e985e9c514610f59578063f2fde38b14610fd5576101e1565b8063b187bd2614610ba2578063b88d4fde14610bc4578063c4cf690814610cc9576101e1565b80638456cb59116100f05780638456cb5914610adc5780638da5cb5b14610ae65780638f32d59b14610b30578063a22cb46514610b52576101e1565b8063621e9ec01461089d5780636352211e14610a1657806370a0823114610a84576101e1565b806327dc297e1161018357806340c10f191161015d57806340c10f191461071c57806342842e0e1461076a578063447ec2b7146107d85780634f6ccce71461085b576101e1565b806327dc297e146104995780632f745c591461055e57806338bbfa50146105c0576101e1565b806315070401116101bf578063150704011461030757806317d7de7c1461038a57806318160ddd1461040d57806323b872dd1461042b576101e1565b806301ffc9a7146101e6578063081812fc1461024b578063095ea7b3146102b9575b600080fd5b610231600480360360208110156101fc57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611019565b604051808215151515815260200191505060405180910390f35b6102776004803603602081101561026157600080fd5b8101908080359060200190929190505050611081565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610305600480360360408110156102cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110be565b005b61030f6112c7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561034f578082015181840152602081019050610334565b50505050905090810190601f16801561037c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610392611369565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103d25780820151818401526020810190506103b7565b50505050905090810190601f1680156103ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61041561140b565b6040518082815260200191505060405180910390f35b6104976004803603606081101561044157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611418565b005b61055c600480360360408110156104af57600080fd5b8101908080359060200190929190803590602001906401000000008111156104d657600080fd5b8201836020820111156104e857600080fd5b8035906020019184600183028401116401000000008311171561050a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061143d565b005b6105aa6004803603604081101561057457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611480565b6040518082815260200191505060405180910390f35b61071a600480360360608110156105d657600080fd5b8101908080359060200190929190803590602001906401000000008111156105fd57600080fd5b82018360208201111561060f57600080fd5b8035906020019184600183028401116401000000008311171561063157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561069457600080fd5b8201836020820111156106a657600080fd5b803590602001918460018302840111640100000000831117156106c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114f7565b005b6107686004803603604081101561073257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114fc565b005b6107d66004803603606081101561078057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611526565b005b6107e0611546565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610820578082015181840152602081019050610805565b50505050905090810190601f16801561084d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108876004803603602081101561087157600080fd5b81019080803590602001909291905050506115e8565b6040518082815260200191505060405180910390f35b6109fc60048036036101408110156108b457600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610969578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610915565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611620565b604051808215151515815260200191505060405180910390f35b610a4260048036036020811015610a2c57600080fd5b8101908080359060200190929190505050611885565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610ac660048036036020811015610a9a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118c2565b6040518082815260200191505060405180910390f35b610ae4611912565b005b610aee611a22565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b38611a4b565b604051808215151515815260200191505060405180910390f35b610ba060048036036040811015610b6857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611aa2565b005b610baa611bde565b604051808215151515815260200191505060405180910390f35b610cc760048036036080811015610bda57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610c4157600080fd5b820183602082011115610c5357600080fd5b80359060200191846001830284011164010000000083111715610c7557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611bf4565b005b610e326004803603610160811015610ce057600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610d95578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610d41565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050611c1c565b604051808215151515815260200191505060405180910390f35b610e7860048036036020811015610e6257600080fd5b8101908080359060200190929190505050611dc5565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610eb8578082015181840152602081019050610e9d565b50505050905090810190601f168015610ee55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610f3f60048036036040811015610f0957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e8e565b604051808215151515815260200191505060405180910390f35b610fbb60048036036040811015610f6f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612073565b604051808215151515815260200191505060405180910390f35b61101760048036036020811015610feb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612107565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6110c781611885565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561116a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f6973207468652073616d65206f776e6572206f662074686520746f6b656e496481525060200191505060405180910390fd5b611172611a22565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806111bf5750600115156111bb6111b5611a22565b33612073565b1515145b1515611216576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061432b6028913960400191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561135f5780601f106113345761010080835404028352916020019161135f565b820191906000526020600020905b81548152906001019060200180831161134257829003601f168201915b5050505050905090565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114015780601f106113d657610100808354040283529160200191611401565b820191906000526020600020905b8154815290600101906020018083116113e457829003601f168201915b5050505050905090565b6000600880549050905090565b6114223382612126565b151561142d57600080fd5b6114388383836121bb565b505050565b61147c828260006040519080825280601f01601f1916602001820160405280156114765781602001600182028038833980820191505090505b506114f7565b5050565b600061148b836118c2565b8210151561149857600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156114e457fe5b9060005260206000200154905092915050565b505050565b611504611a4b565b151561150f57600080fd5b61151982826121df565b61152281612200565b5050565b61154183838360405180602001604052806000815250611bf4565b505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115de5780601f106115b3576101008083540402835291602001916115de565b820191906000526020600020905b8154815290600101906020018083116115c157829003601f168201915b5050505050905090565b60006115f261140b565b821015156115ff57600080fd5b60088281548110151561160e57fe5b90600052602060002001549050919050565b600061162a6140b2565b604051806040016040528087600060028110151561164457fe5b6020020151815260200187600160028110151561165d57fe5b602002015181525081600001819052506040518060400160405280604051806040016040528088600060028110151561169257fe5b602002015160006002811015156116a557fe5b602002015181526020018860006002811015156116be57fe5b602002015160016002811015156116d157fe5b6020020151815250815260200160405180604001604052808860016002811015156116f857fe5b6020020151600060028110151561170b57fe5b6020020151815260200188600160028110151561172457fe5b6020020151600160028110151561173757fe5b60200201518152508152508160200181905250604051806040016040528085600060028110151561176457fe5b6020020151815260200185600160028110151561177d57fe5b60200201518152508160400181905250606060026040519080825280602002602001820160405280156117bf5781602001602082028038833980820191505090505b50905060008090505b600281101561180d5784816002811015156117df57fe5b602002015182828151811015156117f257fe5b906020019060200201818152505080806001019150506117c8565b50600061181a8284612353565b1415611876577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e396040518080602001828103825260228152602001806143096022913960400191505060405180910390a160019250505061187d565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061190b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612490565b9050919050565b61191a611bde565b15151561198f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b611997611a4b565b15156119a257600080fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611add57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60008060149054906101000a900460ff16905090565b611bff848484611418565b611c0b8484848461249e565b1515611c1657600080fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff16601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611d23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f54686520736f6c7574696f6e206973206e6f7420756e6971756500000000000081525060200191505060405180910390fd5b611d2f86868686611620565b1515611da3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f566572696669636174696f6e206661696c65640000000000000000000000000081525060200191505060405180910390fd5b611dad8233611e8e565b50611db833836121df565b6001905095945050505050565b6060611dd0826126c1565b1515611ddb57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e825780601f10611e5757610100808354040283529160200191611e82565b820191906000526020600020905b815481529060010190602001808311611e6557829003601f168201915b50505050509050919050565b600060405180604001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff168152506013601454815481101515611ecc57fe5b90600052602060002090600202016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060405180604001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff16815250601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506014600081548092919060010191905055507f8ba5cdc385bc6c37c9a05ad09fbc238589c43602f4cee09c46856027df8a935a8383604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a16001905092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61210f611a4b565b151561211a57600080fd5b61212381612733565b50565b60008061213283611885565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806121a157508373ffffffffffffffffffffffffffffffffffffffff1661218984611081565b73ffffffffffffffffffffffffffffffffffffffff16145b806121b257506121b18185612073565b5b91505092915050565b6121c683838361282d565b6121d08382612ae0565b6121da8282612c84565b505050565b6121e98282612d4b565b6121f38282612c84565b6121fc81612f1a565b5050565b612209816126c1565b151561227d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e494420646f65736e7420657869737473000000000000000000000081525060200191505060405180910390fd5b61232960118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123165780601f106122eb57610100808354040283529160200191612316565b820191906000526020600020905b8154815290600101906020018083116122f957829003601f168201915b505050505061232483612f66565b6130bf565b60126000838152602001908152602001600020908051906020019061234f9291906140e6565b5050565b600061235d614166565b612365613103565b9050806080015151600185510114151561237e57600080fd5b6123866141ae565b6040518060400160405280600081526020016000815250905060008090505b8551811015612405576123f6826123f18560800151600185018151811015156123ca57fe5b9060200190602002015189858151811015156123e257fe5b9060200190602002015161355d565b6135f9565b915080806001019150506123a5565b5061242c818360800151600081518110151561241d57fe5b906020019060200201516135f9565b905061247284600001518560200151612444846136b6565b856040015161245689604001516136b6565b876060015161246889600001516136b6565b8960200151613752565b15156124835760019250505061248a565b6000925050505b92915050565b600081600001549050919050565b60006124bf8473ffffffffffffffffffffffffffffffffffffffff166138d6565b15156124ce57600190506126b9565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156125c55780820151818401526020810190506125aa565b50505050905090810190601f1680156125f25780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561261457600080fd5b505af1158015612628573d6000803e3d6000fd5b505050506040513d602081101561263e57600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561276f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61283681611885565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415156128bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806143536031913960400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480156129235750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1515612997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f496e76616c6964207472616e736665726564206164647265737300000000000081525060200191505060405180910390fd5b6129a0816138e9565b6129e7600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206139a9565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612a80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206139cc565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612b386001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506139e290919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515612c2b576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612ba957fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612c0357fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612c7d91906141c8565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60001515612d58826126c1565b15151480612dca57508173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148015612dc95750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b5b1515612e21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806142e26027913960400191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612eba600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206139cc565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612fae576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506130ba565b600082905060005b600082141515612fdc578080600101915050600a82811515612fd457fe5b049150612fb6565b6060816040519080825280601f01601f1916602001820160405280156130115781602001600182028038833980820191505090505b50905060006001830390505b6000861415156130b257600a8681151561303357fe5b066030017f01000000000000000000000000000000000000000000000000000000000000000282828060019003935081518110151561306e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868115156130aa57fe5b04955061301d565b819450505050505b919050565b60606130fb8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613a04565b905092915050565b61310b614166565b60405180604001604052807f0d8d4d9b9efc554bab1ce1024918f488a191107c4b7bd39b8926ba52e44f143b81526020017f2dcbcb3c92028498832200297e104a712e6c03c7d7b740a99baad5d4aa3004b98152508160000181905250604051806040016040528060405180604001604052807f0744ac78582cea0ed5554541f6048241ac82f6ca00d4c295de1c18754a822eb781526020017f0f8b265f1d0a8c752f5edd3fd864f87f260591d934281a199eb38c650aea651c815250815260200160405180604001604052807f20b8ae9116f8fe9981f96f1643ecea3df176b5fa5ef63425f71d3ba22444932081526020017f06200477a3a4208309d4382d9482f17e44b831f78593a6b161dd15b9f43627fc8152508152508160200181905250604051806040016040528060405180604001604052807f15dbc3d1d7e08aa379f036aa40e1ca0f859bb73933d6c46393bca682eed4837f81526020017f1dd60eb7280671564de78f5e4c9b5ebb12a3ab67bb04f4ca3ad64096c85b632b815250815260200160405180604001604052807f1b940de3409f02243be422c8c7b40fec9d041625237875f268ceede56abaffea81526020017f0bddb139f753641d67a63058429d825c242f196dcf104d7036aed0cc94a198ed8152508152508160400181905250604051806040016040528060405180604001604052807f1b2eb16c2986793cb1ed0df869b7b10607572e787fca62837d5986ed02243f7d81526020017f2f3106344ca87db2674c55f5300f5e0c95d74cfe142dc87208444d1f22702d5c815250815260200160405180604001604052807f25333e352428bd0c9244e0318f8f964b3954777cb665b2f0baacc94ed84f33d381526020017f01d37e36b694353d59c8b5f6b9e529ae0d18169c72922a3c5eecc50d6036b67e815250815250816060018190525060036040519080825280602002602001820160405280156133f257816020015b6133df6141f4565b8152602001906001900390816133d75790505b50816080018190525060405180604001604052807f2122e05b38da7197f38f5f9bde7e595145259e0b98cf65395ae63027cae9e30881526020017f296fe5a908418ac75ddab05d02b19076d18fd1683f35463f921a1deaa2f5fce68152508160800151600081518110151561346357fe5b9060200190602002018190525060405180604001604052807f16c9960ba9dbd87c411717e837d4e41eccfe91318c0e4784ff8914c3ba6fb3fd81526020017f06410e2c2836ef82b8226a6176b6b006cfe5b72bacf02b50025781c0bff53a91815250816080015160018151811015156134d857fe5b9060200190602002018190525060405180604001604052807f0452a501d224ad2398b461f6c92a4ff86c9e2894926e01f88c2c9fa0f65cc18a81526020017f05d1468ff5cb3346d5ae2cb90ee4b9a2c2056762a393a373ccdb3ef748f855e78152508160800151600281518110151561354d57fe5b9060200190602002018190525090565b6135656141ae565b61356d61420e565b836000015181600060038110151561358157fe5b602002018181525050836020015181600160038110151561359e57fe5b602002018181525050828160026003811015156135b757fe5b6020020181815250506000606083608084600060076107d05a03f1905080600081146135e2576135e4565bfe5b508015156135f157600080fd5b505092915050565b6136016141ae565b613609614230565b836000015181600060048110151561361d57fe5b602002018181525050836020015181600160048110151561363a57fe5b602002018181525050826000015181600260048110151561365757fe5b602002018181525050826020015181600360048110151561367457fe5b602002018181525050600060608360c084600060066107d05a03f19050806000811461369f576136a1565bfe5b508015156136ae57600080fd5b505092915050565b6136be6141ae565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050600083600001511480156136fb575060008360200151145b1561371f57604051806040016040528060008152602001600081525091505061374d565b60405180604001604052808460000151815260200182856020015181151561374357fe5b0683038152509150505b919050565b60006060600460405190808252806020026020018201604052801561379157816020015b61377e6141f4565b8152602001906001900390816137765790505b509050606060046040519080825280602002602001820160405280156137d157816020015b6137be614252565b8152602001906001900390816137b65790505b5090508a8260008151811015156137e457fe5b906020019060200201819052508882600181518110151561380157fe5b906020019060200201819052508682600281518110151561381e57fe5b906020019060200201819052508482600381518110151561383b57fe5b906020019060200201819052508981600081518110151561385857fe5b906020019060200201819052508781600181518110151561387557fe5b906020019060200201819052508581600281518110151561389257fe5b90602001906020020181905250838160038151811015156138af57fe5b906020019060200201819052506138c68282613e1f565b9250505098975050505050505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156139a65760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6139c1600182600001546139e290919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b60008282111515156139f357600080fd5b600082840390508091505092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613a605781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613b2a578881815181101515613a8e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515613aed57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613a77565b600090505b8751811015613be2578781815181101515613b4657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515613ba557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613b2f565b600090505b8651811015613c9a578681815181101515613bfe57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515613c5d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613be7565b600090505b8551811015613d52578581815181101515613cb657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515613d1557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613c9f565b600090505b8451811015613e0a578481815181101515613d6e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515613dcd57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613d57565b82995050505050505050505095945050505050565b600081518351141515613e3157600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015613e705781602001602082028038833980820191505090505b50905060008090505b8381101561404e578681815181101515613e8f57fe5b90602001906020020151600001518260006006840201815181101515613eb157fe5b90602001906020020181815250508681815181101515613ecd57fe5b90602001906020020151602001518260016006840201815181101515613eef57fe5b90602001906020020181815250508581815181101515613f0b57fe5b90602001906020020151600001516000600281101515613f2757fe5b60200201518260026006840201815181101515613f4057fe5b90602001906020020181815250508581815181101515613f5c57fe5b90602001906020020151600001516001600281101515613f7857fe5b60200201518260036006840201815181101515613f9157fe5b90602001906020020181815250508581815181101515613fad57fe5b90602001906020020151602001516000600281101515613fc957fe5b60200201518260046006840201815181101515613fe257fe5b90602001906020020181815250508581815181101515613ffe57fe5b9060200190602002015160200151600160028110151561401a57fe5b6020020151826005600684020181518110151561403357fe5b90602001906020020181815250508080600101915050613e79565b50614057614278565b60006020826020860260208601600060086107d05a03f19050806000811461407e57614080565bfe5b5080151561408d57600080fd5b600082600060018110151561409e57fe5b602002015114159550505050505092915050565b6040518061010001604052806140c66141f4565b81526020016140d3614252565b81526020016140e06141f4565b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061412757805160ff1916838001178555614155565b82800160010185558215614155579182015b82811115614154578251825591602001919060010190614139565b5b509050614162919061429a565b5090565b604051806101e0016040528061417a6141f4565b8152602001614187614252565b8152602001614194614252565b81526020016141a1614252565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156141ef578183600052602060002091820191016141ee919061429a565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180608001604052806142656142bf565b81526020016142726142bf565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b6142bc91905b808211156142b85760008160009055506001016142a0565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe546f6b656e20616c726561647920657869737473206f7220496e76616c696420616464726573735472616e73616374696f6e207375636365737366756c6c792076657269666965642e6973206e6f74206f776e6572204f72206973206e6f74206973417070726f766564466f72416c6c205468652073656e6465722061646472657373206973206e6f7420746865206f776e6572206f66207468697320746f6b656ea165627a7a72305820b7d9860a2359d78287226b39f6ac1c540fc139285a520bf8edd30b664fa2dbe70029",
  "sourceMap": "301:2153:3:-;;;842:1;824:19;;20991:283:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;989:10;977:9;;:22;;;;;;;;;;;;;;;;;;1044:9;;;;;;;;;;;1014:40;;1040:1;1014:40;;;;;;;;;;;;2634:5;2624:7;;:15;;;;;;;;;;;;;;;;;;3786:40;3383:10;3805:20;;3786:18;;;:40;;;:::i;:::-;5932;5806:10;5951:20;;5932:18;;;:40;;;:::i;:::-;13695:51;13301:10;13714:31;;13695:18;;;:51;;;:::i;:::-;21140:4;21132:5;:12;;;;;;;;;;;;:::i;:::-;;21164:6;21154:7;:16;;;;;;;;;;;;:::i;:::-;;21196:12;21180:13;:28;;;;;;;;;;;;:::i;:::-;;21218:49;20802:10;21237:29;;21218:18;;;:49;;;:::i;:::-;20991:283;;;301:2153:3;;4136:158:0;4226:10;4211:25;;:11;:25;;;;;4203:34;;;;;;;;4283:4;4247:20;:33;4268:11;4247:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;4136:158;:::o;301:2153:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "301:2153:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;301:2153:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3924:133:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3924:133:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7190:315;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7190:315:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6511:673;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6511:673:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21504:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21504:89:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21386:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21386:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14460:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8482:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8482:180:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:2;;;;;;;;;;;;;;;:::i;:::-;;14126:182:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14126:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14929:166:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;:::i;:::-;;23438:131:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23438:131:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8668:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8668:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21628:101;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21628:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14891:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14891:148:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;23501:732:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;23501:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23501:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23501:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23501:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23501:732:4;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6276:162:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6276:162:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5985:285;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5985:285:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3051:112;;;:::i;:::-;;1358:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1234:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7797:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7797:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2945:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8806:211;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8806:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8806:211:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8806:211:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8806:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8806:211:0;;;;;;;;;;;;;;;:::i;:::-;;1864:585:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1864:585:3;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1864:585:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1864:585:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1864:585:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1864:585:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;21759:151:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21759:151:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21759:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1176:460:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1176:460:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8331:145:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8331:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1444:245;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1444:245:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;3924:133;3994:4;4017:20;:33;4038:11;4017:33;;;;;;;;;;;;;;;;;;;;;;;;;;;4010:40;;3924:133;;;:::o;7190:315::-;7249:7;7474:15;:24;7490:7;7474:24;;;;;;;;;;;;;;;;;;;;;7467:31;;7190:315;;;:::o;6511:673::-;6672:16;6680:7;6672;:16::i;:::-;6668:20;;:2;:20;;;;6660:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6861:7;:5;:7::i;:::-;6847:21;;:10;:21;;;:70;;;;6913:4;6872:45;;:37;6889:7;:5;:7::i;:::-;6898:10;6872:16;:37::i;:::-;:45;;;6847:70;6839:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7052:2;7025:15;:24;7041:7;7025:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;7169:7;7165:2;7144:33;;7153:10;7144:33;;;;;;;;;;;;6511:673;;:::o;21504:89::-;21547:13;21579:7;21572:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21504:89;:::o;21386:85::-;21427:13;21459:5;21452:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21386:85;:::o;14460:94::-;14504:7;14530:10;:17;;;;14523:24;;14460:94;:::o;8482:180::-;8572:39;8591:10;8603:7;8572:18;:39::i;:::-;8564:48;;;;;;;;8623:32;8637:4;8643:2;8647:7;8623:13;:32::i;:::-;8482:180;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;14126:182:0:-;14206:7;14241:16;14251:5;14241:9;:16::i;:::-;14233:5;:24;14225:33;;;;;;;;14275:12;:19;14288:5;14275:19;;;;;;;;;;;;;;;14295:5;14275:26;;;;;;;;;;;;;;;;;;14268:33;;14126:182;;;;:::o;14929:166:2:-;;;;:::o;23438:131:0:-;1134:9;:7;:9::i;:::-;1126:18;;;;;;;;23508:24;23520:2;23524:7;23508:11;:24::i;:::-;23542:20;23554:7;23542:11;:20::i;:::-;23438:131;;:::o;8668:132::-;8754:39;8771:4;8777:2;8781:7;8754:39;;;;;;;;;;;;:16;:39::i;:::-;8668:132;;;:::o;21628:101::-;21677:13;21709;21702:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21628:101;:::o;14891:148::-;14949:7;14984:13;:11;:13::i;:::-;14976:5;:21;14968:30;;;;;;;;15015:10;15026:5;15015:17;;;;;;;;;;;;;;;;;;15008:24;;14891:148;;;:::o;23501:732:4:-;23672:6;23690:18;;:::i;:::-;23728:27;;;;;;;;23744:1;23746;23744:4;;;;;;;;;;;;;23728:27;;;;23750:1;23752;23750:4;;;;;;;;;;;;;23728:27;;;23718:5;:7;;:37;;;;23775:55;;;;;;;;;;;;;;;;23792:1;23794;23792:4;;;;;;;;;;;;;23797:1;23792:7;;;;;;;;;;;;;23775:55;;;;23801:1;23803;23801:4;;;;;;;;;;;;;23806:1;23801:7;;;;;;;;;;;;;23775:55;;;;;;;;;;;;;;;23812:1;23814;23812:4;;;;;;;;;;;;;23817:1;23812:7;;;;;;;;;;;;;23775:55;;;;23821:1;23823;23821:4;;;;;;;;;;;;;23826:1;23821:7;;;;;;;;;;;;;23775:55;;;;;;23765:5;:7;;:65;;;;23850:27;;;;;;;;23866:1;23868;23866:4;;;;;;;;;;;;;23850:27;;;;23872:1;23874;23872:4;;;;;;;;;;;;;23850:27;;;23840:5;:7;;:37;;;;23887:25;23926:12;23915:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;23915:24:4;;;;23887:52;;23953:6;23962:1;23953:10;;23949:88;23969:12;23965:1;:16;23949:88;;;24018:5;24024:1;24018:8;;;;;;;;;;;;;24001:11;24013:1;24001:14;;;;;;;;;;;;;;;;;:25;;;;;23983:3;;;;;;;23949:88;;;;24080:1;24050:26;24057:11;24070:5;24050:6;:26::i;:::-;:31;24046:181;;;24102:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24169:4;24162:11;;;;;;24046:181;24211:5;24204:12;;;;23501:732;;;;;;;:::o;6276:162:0:-;6331:7;6411:11;:20;6423:7;6411:20;;;;;;;;;;;;;;;;;;;;;6404:27;;6276:162;;;:::o;5985:285::-;6040:7;6229:34;:17;:24;6247:5;6229:24;;;;;;;;;;;;;;;:32;:34::i;:::-;6222:41;;5985:285;;;:::o;3051:112::-;2851:10;:8;:10::i;:::-;2850:11;2842:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1134:9;:7;:9::i;:::-;1126:18;;;;;;;;3119:4;3109:7;;:14;;;;;;;;;;;;;;;;;;3138:18;3145:10;3138:18;;;;;;;;;;;;;;;;;;;;;;3051:112::o;1358:80::-;1396:7;1422:9;;;;;;;;;;;1415:16;;1358:80;:::o;1234:93::-;1274:4;1311:9;;;;;;;;;;;1297:23;;:10;:23;;;1290:30;;1234:93;:::o;7797:213::-;7882:10;7876:16;;:2;:16;;;;7868:25;;;;;;;;7940:8;7903:18;:30;7922:10;7903:30;;;;;;;;;;;;;;;:34;7934:2;7903:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7990:2;7963:40;;7978:10;7963:40;;;7994:8;7963:40;;;;;;;;;;;;;;;;;;;;;;7797:213;;:::o;2945:78::-;2986:4;3009:7;;;;;;;;;;;3002:14;;2945:78;:::o;8806:211::-;8912:31;8925:4;8931:2;8935:7;8912:12;:31::i;:::-;8961:48;8984:4;8990:2;8994:7;9003:5;8961:22;:48::i;:::-;8953:57;;;;;;;;8806:211;;;;:::o;1864:585:3:-;2174:4;2239:1;2202:39;;:5;:17;2208:10;2202:17;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:39;;;2194:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2290:24;2299:1;2302;2305;2308:5;2290:8;:24::i;:::-;2282:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2347:32;2359:7;2368:10;2347:11;:32::i;:::-;;2389;2401:10;2413:7;2389:11;:32::i;:::-;2438:4;2431:11;;1864:585;;;;;;;:::o;21759:151:0:-;21817:13;21850:16;21858:7;21850;:16::i;:::-;21842:25;;;;;;;;21884:10;:19;21895:7;21884:19;;;;;;;;;;;21877:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21759:151;;;:::o;1176:460:3:-;1390:4;1425:41;;;;;;;;1435:13;1425:41;;;;1450:15;1425:41;;;;;1410:3;1414:7;;1410:12;;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:41;;;;;;;;1506:13;1496:41;;;;1521:15;1496:41;;;;;1476:5;:17;1482:10;1476:17;;;;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1547:7;;:9;;;;;;;;;;;;;1571:37;1577:13;1592:15;1571:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;1625:4;1618:11;;1176:460;;;;:::o;8331:145:0:-;8411:4;8434:18;:25;8453:5;8434:25;;;;;;;;;;;;;;;:35;8460:8;8434:35;;;;;;;;;;;;;;;;;;;;;;;;;8427:42;;8331:145;;;;:::o;1444:245::-;1134:9;:7;:9::i;:::-;1126:18;;;;;;;;1654:28;1673:8;1654:18;:28::i;:::-;1444:245;:::o;9723:246::-;9808:4;9824:13;9840:16;9848:7;9840;:16::i;:::-;9824:32;;9885:5;9874:16;;:7;:16;;;:51;;;;9918:7;9894:31;;:20;9906:7;9894:11;:20::i;:::-;:31;;;9874:51;:87;;;;9929:32;9946:5;9953:7;9929:16;:32::i;:::-;9874:87;9866:96;;;9723:246;;;;:::o;15414:239::-;15499:38;15519:4;15525:2;15529:7;15499:19;:38::i;:::-;15548:47;15581:4;15587:7;15548:32;:47::i;:::-;15606:40;15634:2;15638:7;15606:27;:40::i;:::-;15414:239;;;:::o;15908:196::-;15971:24;15983:2;15987:7;15971:11;:24::i;:::-;16006:40;16034:2;16038:7;16006:27;:40::i;:::-;16057;16089:7;16057:31;:40::i;:::-;15908:196;;:::o;22412:189::-;22477:16;22485:7;22477;:16::i;:::-;22469:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22551:43;22561:13;22551:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22576:17;22585:7;22576:8;:17::i;:::-;22551:9;:43::i;:::-;22529:10;:19;22540:7;22529:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;22412:189;:::o;22740:726:4:-;22815:4;22831:22;;:::i;:::-;22856:14;:12;:14::i;:::-;22831:39;;22908:2;:11;;;:18;22903:1;22888:5;:12;:16;:38;22880:47;;;;;;;;22984:27;;:::i;:::-;23014:21;;;;;;;;23030:1;23014:21;;;;23033:1;23014:21;;;22984:51;;23050:6;23059:1;23050:10;;23045:131;23066:5;:12;23062:1;:16;23045:131;;;23104:72;23121:4;23127:48;23146:2;:11;;;23162:1;23158;:5;23146:18;;;;;;;;;;;;;;;;;;23166:5;23172:1;23166:8;;;;;;;;;;;;;;;;;;23127:18;:48::i;:::-;23104:16;:72::i;:::-;23097:79;;23080:3;;;;;;;23045:131;;;;23193:38;23210:4;23216:2;:11;;;23228:1;23216:14;;;;;;;;;;;;;;;;;;23193:16;:38::i;:::-;23186:45;;23245:186;23280:5;:7;;;23289:5;:7;;;23311:20;23326:4;23311:14;:20::i;:::-;23333:2;:8;;;23356:23;23371:5;:7;;;23356:14;:23::i;:::-;23381:2;:8;;;23404:20;23419:2;:4;;;23404:14;:20::i;:::-;23426:2;:4;;;23245:20;:186::i;:::-;23244:187;23241:200;;;23440:1;23433:8;;;;;;23241:200;23458:1;23451:8;;;;22740:726;;;;;:::o;1062:112:5:-;1127:7;1153;:14;;;1146:21;;1062:112;;;:::o;12146:347:0:-;12267:4;12292:15;:2;:13;;;:15::i;:::-;12291:16;12287:58;;;12330:4;12323:11;;;;12287:58;12355:13;12387:2;12371:36;;;12408:10;12420:4;12426:7;12435:5;12371:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12371:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12371:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12371:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12371:70:0;;;;;;;;;;;;;;;;12355:86;;4939:10;12469:16;;12459:26;;;:6;:26;;;;12451:35;;;12146:347;;;;;;;:::o;9211:152::-;9268:4;9284:13;9300:11;:20;9312:7;9300:20;;;;;;;;;;;;;;;;;;;;;9284:36;;9354:1;9337:19;;:5;:19;;;;9330:26;;;9211:152;;;:::o;1750:186::-;1843:1;1823:22;;:8;:22;;;;1815:31;;;;;;;;1890:8;1861:38;;1879:9;;;;;;;;;;;1861:38;;;;;;;;;;;;1921:8;1909:9;;:20;;;;;;;;;;;;;;;;;;1750:186;:::o;10840:778::-;11013:16;11021:7;11013;:16::i;:::-;11005:24;;:4;:24;;;10996:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11184:2;11170:17;;:2;:17;;;:37;;;;;11205:1;11191:16;;:2;:16;;;;11170:37;11161:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11280:23;11295:7;11280:14;:23::i;:::-;11388:35;:17;:23;11406:4;11388:23;;;;;;;;;;;;;;;:33;:35::i;:::-;11456:2;11433:11;:20;11445:7;11433:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11468:33;:17;:21;11486:2;11468:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11603:7;11599:2;11584:27;;11593:4;11584:27;;;;;;;;;;;;10840:778;;;:::o;17880:1128::-;18142:22;18167:32;18197:1;18167:12;:18;18180:4;18167:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;18142:57;;18209:18;18230:17;:26;18248:7;18230:26;;;;;;;;;;;;18209:47;;18374:14;18360:10;:28;;18356:323;;;18404:19;18426:12;:18;18439:4;18426:18;;;;;;;;;;;;;;;18445:14;18426:34;;;;;;;;;;;;;;;;;;18404:56;;18508:11;18475:12;:18;18488:4;18475:18;;;;;;;;;;;;;;;18494:10;18475:30;;;;;;;;;;;;;;;;;:44;;;;18624:10;18591:17;:30;18609:11;18591:30;;;;;;;;;;;:43;;;;18356:323;;18765:12;:18;18778:4;18765:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17880:1128;;;;:::o;16726:183::-;16839:12;:16;16852:2;16839:16;;;;;;;;;;;;;;;:23;;;;16810:17;:26;16828:7;16810:26;;;;;;;;;;;:52;;;;16872:12;:16;16885:2;16872:16;;;;;;;;;;;;;;;16894:7;16872:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16872:30:0;;;;;;;;;;;;;;;;;;;;;;16726:183;;:::o;10126:515::-;10301:5;10281:25;;:16;10289:7;10281;:16::i;:::-;:25;;;:70;;;;10326:2;10312:17;;:2;:17;;;:37;;;;;10347:1;10333:16;;:2;:16;;;;10312:37;10281:70;10273:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10505:2;10482:11;:20;10494:7;10482:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10517:33;:17;:21;10535:2;10517:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10626:7;10622:2;10601:33;;10618:1;10601:33;;;;;;;;;;;;10126:515;;:::o;17104:161::-;17207:10;:17;;;;17180:15;:24;17196:7;17180:24;;;;;;;;;;;:44;;;;17234:10;17250:7;17234:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17234:24:0;;;;;;;;;;;;;;;;;;;;;;17104:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;;43456:66;;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;;43601:100;;;43664:2;43659;:7;;;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;20795:1940:4:-;20842:22;;:::i;:::-;20883:169;;;;;;;;20907:66;20883:169;;;;20984:66;20883:169;;;20876:2;:4;;:176;;;;21069:327;;;;;;;;;;;;;;;;21094:66;21069:327;;;;21171:66;21069:327;;;;;;;;;;;;;;;21250:66;21069:327;;;;21327:66;21069:327;;;;;;21062:2;:4;;:334;;;;21417:327;;;;;;;;;;;;;;;;21442:66;21417:327;;;;21519:66;21417:327;;;;;;;;;;;;;;;21598:66;21417:327;;;;21675:66;21417:327;;;;;;21406:2;:8;;:338;;;;21765:327;;;;;;;;;;;;;;;;21790:66;21765:327;;;;21867:66;21765:327;;;;;;;;;;;;;;;21946:66;21765:327;;;;22023:66;21765:327;;;;;;21754:2;:8;;:338;;;;22138:1;22116:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22102:2;:11;;:38;;;;22167:169;;;;;;;;22191:66;22167:169;;;;22268:66;22167:169;;;22150:2;:11;;;22162:1;22150:14;;;;;;;;;;;;;;;;;:186;;;;22363:169;;;;;;;;22387:66;22363:169;;;;22464:66;22363:169;;;22346:2;:11;;;22358:1;22346:14;;;;;;;;;;;;;;;;;:186;;;;22559:169;;;;;;;;22583:66;22559:169;;;;22660:66;22559:169;;;22542:2;:11;;;22554:1;22542:14;;;;;;;;;;;;;;;;;:186;;;;20795:1940;:::o;17339:444::-;17403:16;;:::i;:::-;17431:20;;:::i;:::-;17472:1;:3;;;17461:5;17467:1;17461:8;;;;;;;;;;;;:14;;;;;17496:1;:3;;;17485:5;17491:1;17485:8;;;;;;;;;;;;:14;;;;;17520:1;17509:5;17515:1;17509:8;;;;;;;;;;;;:12;;;;;17531;17630:4;17627:1;17621:4;17614:5;17611:1;17608;17601:4;17596:3;17592:14;17587:48;17576:59;;17712:7;17725:1;17720:20;;;;17705:35;;17720:20;17729:9;17705:35;;17768:7;17759:17;;;;;;;;17339:444;;;;;;:::o;16422:483::-;16496:16;;:::i;:::-;16524:20;;:::i;:::-;16565:2;:4;;;16554:5;16560:1;16554:8;;;;;;;;;;;;:15;;;;;16590:2;:4;;;16579:5;16585:1;16579:8;;;;;;;;;;;;:15;;;;;16615:2;:4;;;16604:5;16610:1;16604:8;;;;;;;;;;;;:15;;;;;16640:2;:4;;;16629:5;16635:1;16629:8;;;;;;;;;;;;:15;;;;;16654:12;16753:4;16750:1;16744:4;16737:5;16734:1;16731;16724:4;16719:3;16715:14;16710:48;16699:59;;16835:7;16848:1;16843:20;;;;16828:35;;16843:20;16852:9;16828:35;;16890:7;16882:16;;;;;;;;16422:483;;;;;;:::o;16033:340::-;16090:14;;:::i;:::-;16168:6;16177:77;16168:86;;16275:1;16268;:3;;;:8;:20;;;;;16287:1;16280;:3;;;:8;16268:20;16264:58;;;16309:13;;;;;;;;16317:1;16309:13;;;;16320:1;16309:13;;;16302:20;;;;;16264:58;16339:27;;;;;;;;16347:1;:3;;;16339:27;;;;16363:1;16357;:3;;;:7;;;;;;;;16352:1;:13;16339:27;;;16332:34;;;16033:340;;;;:::o;19905:547::-;20151:4;20167:19;20203:1;20189:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20167:38;;20215:19;20251:1;20237:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20215:38;;20271:2;20263;20266:1;20263:5;;;;;;;;;;;;;;;;;:10;;;;20291:2;20283;20286:1;20283:5;;;;;;;;;;;;;;;;;:10;;;;20311:2;20303;20306:1;20303:5;;;;;;;;;;;;;;;;;:10;;;;20331:2;20323;20326:1;20323:5;;;;;;;;;;;;;;;;;:10;;;;20351:2;20343;20346:1;20343:5;;;;;;;;;;;;;;;;;:10;;;;20371:2;20363;20366:1;20363:5;;;;;;;;;;;;;;;;;:10;;;;20391:2;20383;20386:1;20383:5;;;;;;;;;;;;;;;;;:10;;;;20411:2;20403;20406:1;20403:5;;;;;;;;;;;;;;;;;:10;;;;20430:15;20438:2;20442;20430:7;:15::i;:::-;20423:22;;;;19905:547;;;;;;;;;;:::o;463:616:8:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;12574:171:0:-;12673:1;12637:38;;:15;:24;12653:7;12637:24;;;;;;;;;;;;;;;;;;;;;:38;;;;12633:106;;;12726:1;12691:15;:24;12707:7;12691:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12633:106;12574:171;:::o;1275:108:5:-;1355:21;1374:1;1355:7;:14;;;:18;;:21;;;;:::i;:::-;1338:7;:14;;:38;;;;1275:108;:::o;1180:89::-;1261:1;1243:7;:14;;;:19;;;;;;;;;;;1180:89;:::o;1211:145:6:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;17994:913:4:-;18071:4;18108:2;:9;18095:2;:9;:22;18087:31;;;;;;;;18128:13;18144:2;:9;18128:25;;18163:14;18191:1;18180:8;:12;18163:29;;18202:19;18235:9;18224:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18224:21:4;;;;18202:43;;18260:6;18269:1;18260:10;;18255:307;18276:8;18272:1;:12;18255:307;;;18332:2;18335:1;18332:5;;;;;;;;;;;;;;;;;;:7;;;18313:5;18327:1;18323;18319;:5;:9;18313:16;;;;;;;;;;;;;;;;;:26;;;;;18372:2;18375:1;18372:5;;;;;;;;;;;;;;;;;;:7;;;18353:5;18367:1;18363;18359;:5;:9;18353:16;;;;;;;;;;;;;;;;;:26;;;;;18412:2;18415:1;18412:5;;;;;;;;;;;;;;;;;;:7;;;18420:1;18412:10;;;;;;;;;;;;;18393:5;18407:1;18403;18399;:5;:9;18393:16;;;;;;;;;;;;;;;;;:29;;;;;18455:2;18458:1;18455:5;;;;;;;;;;;;;;;;;;:7;;;18463:1;18455:10;;;;;;;;;;;;;18436:5;18450:1;18446;18442;:5;:9;18436:16;;;;;;;;;;;;;;;;;:29;;;;;18498:2;18501:1;18498:5;;;;;;;;;;;;;;;;;;:7;;;18506:1;18498:10;;;;;;;;;;;;;18479:5;18493:1;18489;18485;:5;:9;18479:16;;;;;;;;;;;;;;;;;:29;;;;;18541:2;18544:1;18541:5;;;;;;;;;;;;;;;;;;:7;;;18549:1;18541:10;;;;;;;;;;;;;18522:5;18536:1;18532;18528;:5;:9;18522:16;;;;;;;;;;;;;;;;;:29;;;;;18286:3;;;;;;;18255:307;;;;18571:18;;:::i;:::-;18599:12;18727:4;18722:3;18715:4;18704:9;18700:20;18693:4;18686:5;18682:16;18679:1;18676;18669:4;18664:3;18660:14;18655:77;18644:88;;18809:7;18822:1;18817:20;;;;18802:35;;18817:20;18826:9;18802:35;;18864:7;18856:16;;;;;;;;18899:1;18889:3;18893:1;18889:6;;;;;;;;;;;;;:11;;18882:18;;;;;;;17994:913;;;;:::o;301:2153:3:-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:2153:3;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:2153:3;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:2153:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:2153:3;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport './Verifier.sol';\nimport './ERC721Mintable.sol';\n\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is CustomERC721Token, Verifier {\n\n/*\n    constructor(address verifierAddress, string memory name, string memory symbol) CustomERC721Token(name, symbol) public \n    {\n        verifierContract = Verifier(verifierAddress);\n    }\n*/\n    // TODO define a solutions struct that can hold an index & an address\n    struct solutions {\n        uint256 index;\n        address Address;\n    }\n\n    // TODO define an array of the above struct\n    solutions[] private sol;\n\n    // solutions array counter \n    uint256 counter = 0;\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(address => solutions ) private store;\n\n\n    // TODO Create an event to emit when a solution is added\n    event Added(uint256 solutionsIndex, address solutionsAdd);\n\n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(\n                            uint256 recievedIndex,\n                            address recievedAddress\n                        )\n                        public\n                        returns(bool)\n    {\n        sol[counter] = solutions(recievedIndex, recievedAddress);\n        store[msg.sender] = solutions(recievedIndex, recievedAddress);\n        counter++;\n        emit Added(recievedIndex, recievedAddress);\n        return true;\n    }\n\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function newMint(\n                        uint[2] memory a,\n                        uint[2][2] memory b,\n                        uint[2] memory c,\n                        uint[2] memory input,\n                        uint256 tokenId\n                    )\n                    public\n                    returns(bool)\n    {\n        require(store[msg.sender].Address == address(0), \"The solution is not unique\");\n        require(verifyTx(a, b, c, input),\"Verification failed\");\n        addSolution(tokenId, msg.sender);\n        super._mint(msg.sender, tokenId);\n        return true;\n    }\n  \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "E:/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/E/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7616
      ]
    },
    "id": 7617,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7484,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/E/Blockchain-Capstone-master/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7485,
        "nodeType": "ImportDirective",
        "scope": 7617,
        "sourceUnit": 10212,
        "src": "141:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Blockchain-Capstone-master/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7486,
        "nodeType": "ImportDirective",
        "scope": 7617,
        "sourceUnit": 1158,
        "src": "166:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7487,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1157,
              "src": "332:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1157",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7488,
            "nodeType": "InheritanceSpecifier",
            "src": "332:17:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7489,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10211,
              "src": "351:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10211",
                "typeString": "contract Verifier"
              }
            },
            "id": 7490,
            "nodeType": "InheritanceSpecifier",
            "src": "351:8:3"
          }
        ],
        "contractDependencies": [
          94,
          722,
          1020,
          178,
          224,
          1130,
          1157,
          7482,
          10211
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7616,
        "linearizedBaseContracts": [
          7616,
          10211,
          1157,
          1130,
          7482,
          1020,
          722,
          224,
          178,
          94
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.solutions",
            "id": 7495,
            "members": [
              {
                "constant": false,
                "id": 7492,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7495,
                "src": "663:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7491,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7494,
                "name": "Address",
                "nodeType": "VariableDeclaration",
                "scope": 7495,
                "src": "686:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7493,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "686:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "solutions",
            "nodeType": "StructDefinition",
            "scope": 7616,
            "src": "636:72:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7498,
            "name": "sol",
            "nodeType": "VariableDeclaration",
            "scope": 7616,
            "src": "762:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_solutions_$7495_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.solutions[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7496,
                "name": "solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7495,
                "src": "762:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_solutions_$7495_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.solutions"
                }
              },
              "id": 7497,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "762:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_solutions_$7495_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.solutions[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7501,
            "name": "counter",
            "nodeType": "VariableDeclaration",
            "scope": 7616,
            "src": "824:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7499,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "824:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7500,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "842:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7505,
            "name": "store",
            "nodeType": "VariableDeclaration",
            "scope": 7616,
            "src": "915:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_solutions_$7495_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.solutions)"
            },
            "typeName": {
              "id": 7504,
              "keyType": {
                "id": 7502,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "923:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "915:30:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_solutions_$7495_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.solutions)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7503,
                "name": "solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7495,
                "src": "934:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_solutions_$7495_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.solutions"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7511,
            "name": "Added",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7507,
                  "indexed": false,
                  "name": "solutionsIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 7511,
                  "src": "1040:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7509,
                  "indexed": false,
                  "name": "solutionsAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 7511,
                  "src": "1064:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1064:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1039:46:3"
            },
            "src": "1028:58:3"
          },
          {
            "body": {
              "id": 7549,
              "nodeType": "Block",
              "src": "1400:236:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7520,
                        "name": "sol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7498,
                        "src": "1410:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_solutions_$7495_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.solutions storage ref[] storage ref"
                        }
                      },
                      "id": 7522,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7521,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7501,
                        "src": "1414:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1410:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7495_storage",
                        "typeString": "struct SolnSquareVerifier.solutions storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7524,
                          "name": "recievedIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7513,
                          "src": "1435:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7525,
                          "name": "recievedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7515,
                          "src": "1450:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7523,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7495,
                        "src": "1425:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_solutions_$7495_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.solutions storage pointer)"
                        }
                      },
                      "id": 7526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1425:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7495_memory",
                        "typeString": "struct SolnSquareVerifier.solutions memory"
                      }
                    },
                    "src": "1410:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_solutions_$7495_storage",
                      "typeString": "struct SolnSquareVerifier.solutions storage ref"
                    }
                  },
                  "id": 7528,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7529,
                        "name": "store",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7505,
                        "src": "1476:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_solutions_$7495_storage_$",
                          "typeString": "mapping(address => struct SolnSquareVerifier.solutions storage ref)"
                        }
                      },
                      "id": 7532,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7530,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10438,
                          "src": "1482:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1482:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1476:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7495_storage",
                        "typeString": "struct SolnSquareVerifier.solutions storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7534,
                          "name": "recievedIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7513,
                          "src": "1506:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7535,
                          "name": "recievedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7515,
                          "src": "1521:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7533,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7495,
                        "src": "1496:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_solutions_$7495_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.solutions storage pointer)"
                        }
                      },
                      "id": 7536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1496:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7495_memory",
                        "typeString": "struct SolnSquareVerifier.solutions memory"
                      }
                    },
                    "src": "1476:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_solutions_$7495_storage",
                      "typeString": "struct SolnSquareVerifier.solutions storage ref"
                    }
                  },
                  "id": 7538,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:61:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1547:9:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 7539,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7501,
                      "src": "1547:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7541,
                  "nodeType": "ExpressionStatement",
                  "src": "1547:9:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7543,
                        "name": "recievedIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7513,
                        "src": "1577:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7544,
                        "name": "recievedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7515,
                        "src": "1592:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7542,
                      "name": "Added",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7511,
                      "src": "1571:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1571:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7546,
                  "nodeType": "EmitStatement",
                  "src": "1566:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1625:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7519,
                  "id": 7548,
                  "nodeType": "Return",
                  "src": "1618:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7550,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7513,
                  "name": "recievedIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 7550,
                  "src": "1226:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7515,
                  "name": "recievedAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7550,
                  "src": "1277:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1196:130:3"
            },
            "returnParameters": {
              "id": 7519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7518,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7550,
                  "src": "1390:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7517,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1389:6:3"
            },
            "scope": 7616,
            "src": "1176:460:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7614,
              "nodeType": "Block",
              "src": "2184:265:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7576,
                              "name": "store",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7505,
                              "src": "2202:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_solutions_$7495_storage_$",
                                "typeString": "mapping(address => struct SolnSquareVerifier.solutions storage ref)"
                              }
                            },
                            "id": 7579,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7577,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10438,
                                "src": "2208:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2208:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2202:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_solutions_$7495_storage",
                              "typeString": "struct SolnSquareVerifier.solutions storage ref"
                            }
                          },
                          "id": 7580,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Address",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7494,
                          "src": "2202:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2239:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2231:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2231:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2202:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520736f6c7574696f6e206973206e6f7420756e69717565",
                        "id": 7585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2243:28:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca1d8660fcf8b1745372051b11db5b7c5b941e63563055b04647b4894f337aca",
                          "typeString": "literal_string \"The solution is not unique\""
                        },
                        "value": "The solution is not unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca1d8660fcf8b1745372051b11db5b7c5b941e63563055b04647b4894f337aca",
                          "typeString": "literal_string \"The solution is not unique\""
                        }
                      ],
                      "id": 7575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10441,
                        10442
                      ],
                      "referencedDeclaration": 10442,
                      "src": "2194:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2194:78:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7587,
                  "nodeType": "ExpressionStatement",
                  "src": "2194:78:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7590,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7554,
                            "src": "2299:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7591,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7560,
                            "src": "2302:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7592,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7564,
                            "src": "2305:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7593,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7568,
                            "src": "2308:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "id": 7589,
                          "name": "verifyTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10210,
                          "src": "2290:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)"
                          }
                        },
                        "id": 7594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2290:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "566572696669636174696f6e206661696c6564",
                        "id": 7595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2315:21:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0",
                          "typeString": "literal_string \"Verification failed\""
                        },
                        "value": "Verification failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0",
                          "typeString": "literal_string \"Verification failed\""
                        }
                      ],
                      "id": 7588,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10441,
                        10442
                      ],
                      "referencedDeclaration": 10442,
                      "src": "2282:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2282:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7597,
                  "nodeType": "ExpressionStatement",
                  "src": "2282:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7599,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7570,
                        "src": "2359:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7600,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10438,
                          "src": "2368:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2368:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7598,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7550,
                      "src": "2347:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) returns (bool)"
                      }
                    },
                    "id": 7602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7603,
                  "nodeType": "ExpressionStatement",
                  "src": "2347:32:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7607,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10438,
                          "src": "2401:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2401:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7609,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7570,
                        "src": "2413:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7604,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10495,
                        "src": "2389:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7616",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 857,
                      "src": "2389:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2389:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7611,
                  "nodeType": "ExpressionStatement",
                  "src": "2389:32:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2438:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7574,
                  "id": 7613,
                  "nodeType": "Return",
                  "src": "2431:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7554,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1906:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7551,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1906:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7553,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1911:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1906:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7560,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1948:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7555,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1948:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7557,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1953:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1948:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7559,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1956:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1948:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7564,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1993:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7561,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1993:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7563,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1998:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1993:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7568,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "2035:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7565,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2035:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7567,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2040:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2035:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7570,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "2081:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2081:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1880:238:3"
            },
            "returnParameters": {
              "id": 7574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7573,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "2174:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7572,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2174:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2173:6:3"
            },
            "scope": 7616,
            "src": "1864:585:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7617,
        "src": "301:2153:3"
      }
    ],
    "src": "0:2481:3"
  },
  "legacyAST": {
    "absolutePath": "/E/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7616
      ]
    },
    "id": 7617,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7484,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/E/Blockchain-Capstone-master/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7485,
        "nodeType": "ImportDirective",
        "scope": 7617,
        "sourceUnit": 10212,
        "src": "141:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Blockchain-Capstone-master/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7486,
        "nodeType": "ImportDirective",
        "scope": 7617,
        "sourceUnit": 1158,
        "src": "166:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7487,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1157,
              "src": "332:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1157",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7488,
            "nodeType": "InheritanceSpecifier",
            "src": "332:17:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7489,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10211,
              "src": "351:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10211",
                "typeString": "contract Verifier"
              }
            },
            "id": 7490,
            "nodeType": "InheritanceSpecifier",
            "src": "351:8:3"
          }
        ],
        "contractDependencies": [
          94,
          722,
          1020,
          178,
          224,
          1130,
          1157,
          7482,
          10211
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7616,
        "linearizedBaseContracts": [
          7616,
          10211,
          1157,
          1130,
          7482,
          1020,
          722,
          224,
          178,
          94
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.solutions",
            "id": 7495,
            "members": [
              {
                "constant": false,
                "id": 7492,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7495,
                "src": "663:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7491,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7494,
                "name": "Address",
                "nodeType": "VariableDeclaration",
                "scope": 7495,
                "src": "686:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7493,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "686:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "solutions",
            "nodeType": "StructDefinition",
            "scope": 7616,
            "src": "636:72:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7498,
            "name": "sol",
            "nodeType": "VariableDeclaration",
            "scope": 7616,
            "src": "762:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_solutions_$7495_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.solutions[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7496,
                "name": "solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7495,
                "src": "762:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_solutions_$7495_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.solutions"
                }
              },
              "id": 7497,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "762:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_solutions_$7495_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.solutions[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7501,
            "name": "counter",
            "nodeType": "VariableDeclaration",
            "scope": 7616,
            "src": "824:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7499,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "824:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7500,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "842:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7505,
            "name": "store",
            "nodeType": "VariableDeclaration",
            "scope": 7616,
            "src": "915:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_solutions_$7495_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.solutions)"
            },
            "typeName": {
              "id": 7504,
              "keyType": {
                "id": 7502,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "923:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "915:30:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_solutions_$7495_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.solutions)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7503,
                "name": "solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7495,
                "src": "934:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_solutions_$7495_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.solutions"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7511,
            "name": "Added",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7507,
                  "indexed": false,
                  "name": "solutionsIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 7511,
                  "src": "1040:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7509,
                  "indexed": false,
                  "name": "solutionsAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 7511,
                  "src": "1064:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1064:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1039:46:3"
            },
            "src": "1028:58:3"
          },
          {
            "body": {
              "id": 7549,
              "nodeType": "Block",
              "src": "1400:236:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7520,
                        "name": "sol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7498,
                        "src": "1410:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_solutions_$7495_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.solutions storage ref[] storage ref"
                        }
                      },
                      "id": 7522,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7521,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7501,
                        "src": "1414:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1410:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7495_storage",
                        "typeString": "struct SolnSquareVerifier.solutions storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7524,
                          "name": "recievedIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7513,
                          "src": "1435:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7525,
                          "name": "recievedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7515,
                          "src": "1450:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7523,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7495,
                        "src": "1425:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_solutions_$7495_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.solutions storage pointer)"
                        }
                      },
                      "id": 7526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1425:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7495_memory",
                        "typeString": "struct SolnSquareVerifier.solutions memory"
                      }
                    },
                    "src": "1410:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_solutions_$7495_storage",
                      "typeString": "struct SolnSquareVerifier.solutions storage ref"
                    }
                  },
                  "id": 7528,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7529,
                        "name": "store",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7505,
                        "src": "1476:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_solutions_$7495_storage_$",
                          "typeString": "mapping(address => struct SolnSquareVerifier.solutions storage ref)"
                        }
                      },
                      "id": 7532,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7530,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10438,
                          "src": "1482:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1482:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1476:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7495_storage",
                        "typeString": "struct SolnSquareVerifier.solutions storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7534,
                          "name": "recievedIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7513,
                          "src": "1506:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7535,
                          "name": "recievedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7515,
                          "src": "1521:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7533,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7495,
                        "src": "1496:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_solutions_$7495_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.solutions storage pointer)"
                        }
                      },
                      "id": 7536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1496:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7495_memory",
                        "typeString": "struct SolnSquareVerifier.solutions memory"
                      }
                    },
                    "src": "1476:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_solutions_$7495_storage",
                      "typeString": "struct SolnSquareVerifier.solutions storage ref"
                    }
                  },
                  "id": 7538,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:61:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1547:9:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 7539,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7501,
                      "src": "1547:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7541,
                  "nodeType": "ExpressionStatement",
                  "src": "1547:9:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7543,
                        "name": "recievedIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7513,
                        "src": "1577:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7544,
                        "name": "recievedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7515,
                        "src": "1592:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7542,
                      "name": "Added",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7511,
                      "src": "1571:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1571:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7546,
                  "nodeType": "EmitStatement",
                  "src": "1566:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1625:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7519,
                  "id": 7548,
                  "nodeType": "Return",
                  "src": "1618:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7550,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7513,
                  "name": "recievedIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 7550,
                  "src": "1226:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7515,
                  "name": "recievedAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7550,
                  "src": "1277:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1196:130:3"
            },
            "returnParameters": {
              "id": 7519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7518,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7550,
                  "src": "1390:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7517,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1389:6:3"
            },
            "scope": 7616,
            "src": "1176:460:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7614,
              "nodeType": "Block",
              "src": "2184:265:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7576,
                              "name": "store",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7505,
                              "src": "2202:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_solutions_$7495_storage_$",
                                "typeString": "mapping(address => struct SolnSquareVerifier.solutions storage ref)"
                              }
                            },
                            "id": 7579,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7577,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10438,
                                "src": "2208:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2208:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2202:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_solutions_$7495_storage",
                              "typeString": "struct SolnSquareVerifier.solutions storage ref"
                            }
                          },
                          "id": 7580,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Address",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7494,
                          "src": "2202:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2239:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2231:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2231:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2202:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520736f6c7574696f6e206973206e6f7420756e69717565",
                        "id": 7585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2243:28:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca1d8660fcf8b1745372051b11db5b7c5b941e63563055b04647b4894f337aca",
                          "typeString": "literal_string \"The solution is not unique\""
                        },
                        "value": "The solution is not unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca1d8660fcf8b1745372051b11db5b7c5b941e63563055b04647b4894f337aca",
                          "typeString": "literal_string \"The solution is not unique\""
                        }
                      ],
                      "id": 7575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10441,
                        10442
                      ],
                      "referencedDeclaration": 10442,
                      "src": "2194:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2194:78:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7587,
                  "nodeType": "ExpressionStatement",
                  "src": "2194:78:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7590,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7554,
                            "src": "2299:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7591,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7560,
                            "src": "2302:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7592,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7564,
                            "src": "2305:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7593,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7568,
                            "src": "2308:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "id": 7589,
                          "name": "verifyTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10210,
                          "src": "2290:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)"
                          }
                        },
                        "id": 7594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2290:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "566572696669636174696f6e206661696c6564",
                        "id": 7595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2315:21:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0",
                          "typeString": "literal_string \"Verification failed\""
                        },
                        "value": "Verification failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0",
                          "typeString": "literal_string \"Verification failed\""
                        }
                      ],
                      "id": 7588,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10441,
                        10442
                      ],
                      "referencedDeclaration": 10442,
                      "src": "2282:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2282:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7597,
                  "nodeType": "ExpressionStatement",
                  "src": "2282:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7599,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7570,
                        "src": "2359:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7600,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10438,
                          "src": "2368:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2368:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7598,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7550,
                      "src": "2347:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) returns (bool)"
                      }
                    },
                    "id": 7602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7603,
                  "nodeType": "ExpressionStatement",
                  "src": "2347:32:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7607,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10438,
                          "src": "2401:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2401:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7609,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7570,
                        "src": "2413:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7604,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10495,
                        "src": "2389:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7616",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 857,
                      "src": "2389:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2389:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7611,
                  "nodeType": "ExpressionStatement",
                  "src": "2389:32:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2438:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7574,
                  "id": 7613,
                  "nodeType": "Return",
                  "src": "2431:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7554,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1906:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7551,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1906:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7553,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1911:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1906:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7560,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1948:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7555,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1948:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7557,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1953:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1948:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7559,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1956:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1948:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7564,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1993:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7561,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1993:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7563,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1998:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1993:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7568,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "2035:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7565,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2035:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7567,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2040:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2035:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7570,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "2081:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2081:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1880:238:3"
            },
            "returnParameters": {
              "id": 7574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7573,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "2174:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7572,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2174:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2173:6:3"
            },
            "scope": 7616,
            "src": "1864:585:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7617,
        "src": "301:2153:3"
      }
    ],
    "src": "0:2481:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x738D3a85b8BBB7aCbf2c464512E9A84f808197aA",
      "transactionHash": "0x8486224c09c75cc4ca9e120a2caafa4caaf784ad402b6d567dc606b6f8fd2538"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2021-10-04T00:41:26.168Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {
      "isOwner()": {
        "notice": "Check if the calling address is the owner of the contract"
      },
      "isPaused()": {
        "notice": "Check if the contract is Paused"
      }
    }
  }
}