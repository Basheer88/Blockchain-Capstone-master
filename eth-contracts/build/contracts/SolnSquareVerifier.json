{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getbaseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "verifierAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "solutionsIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "solutionsAdd",
          "type": "address"
        }
      ],
      "name": "Added",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "s",
          "type": "string"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "personPaused",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "personUnpaused",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "TransferOwnership",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recievedIndex",
          "type": "uint256"
        },
        {
          "name": "recievedAddress",
          "type": "address"
        }
      ],
      "name": "addSolution",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "newMint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getbaseTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"input\",\"type\":\"uint256[2]\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"newMint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recievedIndex\",\"type\":\"uint256\"},{\"name\":\"recievedAddress\",\"type\":\"address\"}],\"name\":\"addSolution\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"verifierAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"solutionsIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"solutionsAdd\",\"type\":\"address\"}],\"name\":\"Added\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"s\",\"type\":\"string\"}],\"name\":\"Verified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"personPaused\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"personUnpaused\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{\"isOwner()\":{\"notice\":\"Check if the calling address is the owner of the contract\"},\"isPaused()\":{\"notice\":\"Check if the contract is Paused\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x982e18d2e3df98e3339f70f955a4d1fb78411a29963d0ea34621759eef67e86d\",\"urls\":[\"bzzr://a5438906da44343a09c6b47666d3649f269d9d156f2109e147e21595b2284363\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xeb8a266ef2da0aa60eea704031902ffd28b2d13dd0e8f5b69bcfb8415f2dad85\",\"urls\":[\"bzzr://393e9843d41c0652f115378cc58083c4acc4d83f7999fe22932d5e237c215d3f\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x5651770d867b20ef0ac641ce836b7fbce0adcd3789c80c778ac0754d8f7a52b9\",\"urls\":[\"bzzr://249a0cb62dfac5dda924cafc997fb0b77f0ec488acc1288e1779281e12867a70\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzzr://f48ebdff8df1cabbd7749c5eb818a6c54a6ba92956a850736bdcfbc9f53f9ffd\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x46df77908100761dbadf628af3c809a749201cb9da951abb143ba8e5e06963eb\",\"urls\":[\"bzzr://cd9787a7253fec9ab1625ac0e3e341ba99c0a7ddfde02e2fe89acdea78bf3fbb\"]},\"project:/contracts/Verifier.sol\":{\"keccak256\":\"0xdd2b04cbe52a5b6125d0a5fe4d7fb46f91a644e669f55fd3ddf3df1c36f3def6\",\"urls\":[\"bzzr://bbdd66d975d3d54eed6a2ccd57518e5835260f0ed9df8d817cfa1386e31481b2\"]}},\"version\":1}",
  "bytecode": "0x608060405260006015553480156200001657600080fd5b50604051602080620047da833981018060405260208110156200003857600080fd5b81019080805190602001909291905050506040518060400160405280600681526020017f42617368544f00000000000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f42540000000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f81526020016200479b603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a360008060146101000a81548160ff021916908315150217905550620001bd6301ffc9a760e01b6200029b60201b60201c565b620001d56380ac58cd60e01b6200029b60201b60201c565b620001ed63780e9d6360e01b6200029b60201b60201c565b82600f9080519060200190620002059291906200033d565b5081601090805190602001906200021e9291906200033d565b508060119080519060200190620002379291906200033d565b5062000250635b5e139f60e01b6200029b60201b60201c565b50505080601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620003ec565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614151515620002d157600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200038057805160ff1916838001178555620003b1565b82800160010185558215620003b1579182015b82811115620003b057825182559160200191906001019062000393565b5b509050620003c09190620003c4565b5090565b620003e991905b80821115620003e5576000816000905550600101620003cb565b5090565b90565b61439f80620003fc6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063621e9ec0116100f9578063b187bd2611610097578063c87b56dd11610071578063c87b56dd14610e47578063ccd0ef6914610eee578063e985e9c514610f54578063f2fde38b14610fd0576101c4565b8063b187bd2614610b9d578063b88d4fde14610bbf578063c4cf690814610cc4576101c4565b80638456cb59116100d35780638456cb5914610ad75780638da5cb5b14610ae15780638f32d59b14610b2b578063a22cb46514610b4d576101c4565b8063621e9ec0146108985780636352211e14610a1157806370a0823114610a7f576101c4565b806327dc297e1161016657806340c10f191161014057806340c10f19146106ff57806342842e0e14610765578063447ec2b7146107d35780634f6ccce714610856576101c4565b806327dc297e1461047c5780632f745c591461054157806338bbfa50146105a3576101c4565b806315070401116101a257806315070401146102ea57806317d7de7c1461036d57806318160ddd146103f057806323b872dd1461040e576101c4565b806301ffc9a7146101c9578063081812fc1461022e578063095ea7b31461029c575b600080fd5b610214600480360360208110156101df57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611014565b604051808215151515815260200191505060405180910390f35b61025a6004803603602081101561024457600080fd5b810190808035906020019092919050505061107c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102e8600480360360408110156102b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110b9565b005b6102f26112c2565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610332578082015181840152602081019050610317565b50505050905090810190601f16801561035f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610375611364565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b557808201518184015260208101905061039a565b50505050905090810190601f1680156103e25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103f8611406565b6040518082815260200191505060405180910390f35b61047a6004803603606081101561042457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611413565b005b61053f6004803603604081101561049257600080fd5b8101908080359060200190929190803590602001906401000000008111156104b957600080fd5b8201836020820111156104cb57600080fd5b803590602001918460018302840111640100000000831117156104ed57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611438565b005b61058d6004803603604081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061147b565b6040518082815260200191505060405180910390f35b6106fd600480360360608110156105b957600080fd5b8101908080359060200190929190803590602001906401000000008111156105e057600080fd5b8201836020820111156105f257600080fd5b8035906020019184600183028401116401000000008311171561061457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561067757600080fd5b82018360208201111561068957600080fd5b803590602001918460018302840111640100000000831117156106ab57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114f2565b005b61074b6004803603604081101561071557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114f7565b604051808215151515815260200191505060405180910390f35b6107d16004803603606081101561077b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611529565b005b6107db611549565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561081b578082015181840152602081019050610800565b50505050905090810190601f1680156108485780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108826004803603602081101561086c57600080fd5b81019080803590602001909291905050506115eb565b6040518082815260200191505060405180910390f35b6109f760048036036101408110156108af57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610964578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610910565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611623565b604051808215151515815260200191505060405180910390f35b610a3d60048036036020811015610a2757600080fd5b8101908080359060200190929190505050611888565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610ac160048036036020811015610a9557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118c5565b6040518082815260200191505060405180910390f35b610adf611915565b005b610ae9611a25565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b33611a4e565b604051808215151515815260200191505060405180910390f35b610b9b60048036036040811015610b6357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611aa5565b005b610ba5611be1565b604051808215151515815260200191505060405180910390f35b610cc260048036036080811015610bd557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610c3c57600080fd5b820183602082011115610c4e57600080fd5b80359060200191846001830284011164010000000083111715610c7057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611bf7565b005b610e2d6004803603610160811015610cdb57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610d90578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610d3c565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050611c1f565b604051808215151515815260200191505060405180910390f35b610e7360048036036020811015610e5d57600080fd5b8101908080359060200190929190505050611f47565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610eb3578082015181840152602081019050610e98565b50505050905090810190601f168015610ee05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610f3a60048036036040811015610f0457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612010565b604051808215151515815260200191505060405180910390f35b610fb660048036036040811015610f6a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121f5565b604051808215151515815260200191505060405180910390f35b61101260048036036020811015610fe657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612289565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6110c281611888565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611165576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f6973207468652073616d65206f776e6572206f662074686520746f6b656e496481525060200191505060405180910390fd5b61116d611a25565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806111ba5750600115156111b66111b0611a25565b336121f5565b1515145b1515611211576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061431b6028913960400191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b5050505050905090565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113fc5780601f106113d1576101008083540402835291602001916113fc565b820191906000526020600020905b8154815290600101906020018083116113df57829003601f168201915b5050505050905090565b6000600880549050905090565b61141d33826122a8565b151561142857600080fd5b61143383838361233d565b505050565b611477828260006040519080825280601f01601f1916602001820160405280156114715781602001600182028038833980820191505090505b506114f2565b5050565b6000611486836118c5565b8210151561149357600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156114df57fe5b9060005260206000200154905092915050565b505050565b6000611501611a4e565b151561150c57600080fd5b6115168383612361565b61151f82612382565b6001905092915050565b61154483838360405180602001604052806000815250611bf7565b505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115e15780601f106115b6576101008083540402835291602001916115e1565b820191906000526020600020905b8154815290600101906020018083116115c457829003601f168201915b5050505050905090565b60006115f5611406565b8210151561160257600080fd5b60088281548110151561161157fe5b90600052602060002001549050919050565b600061162d6140a2565b604051806040016040528087600060028110151561164757fe5b6020020151815260200187600160028110151561166057fe5b602002015181525081600001819052506040518060400160405280604051806040016040528088600060028110151561169557fe5b602002015160006002811015156116a857fe5b602002015181526020018860006002811015156116c157fe5b602002015160016002811015156116d457fe5b6020020151815250815260200160405180604001604052808860016002811015156116fb57fe5b6020020151600060028110151561170e57fe5b6020020151815260200188600160028110151561172757fe5b6020020151600160028110151561173a57fe5b60200201518152508152508160200181905250604051806040016040528085600060028110151561176757fe5b6020020151815260200185600160028110151561178057fe5b60200201518152508160400181905250606060026040519080825280602002602001820160405280156117c25781602001602082028038833980820191505090505b50905060008090505b60028110156118105784816002811015156117e257fe5b602002015182828151811015156117f557fe5b906020019060200201818152505080806001019150506117cb565b50600061181d82846124d5565b1415611879577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e396040518080602001828103825260228152602001806142f96022913960400191505060405180910390a1600192505050611880565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061190e600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612612565b9050919050565b61191d611be1565b151515611992576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b61199a611a4e565b15156119a557600080fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611ae057600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60008060149054906101000a900460ff16905090565b611c02848484611413565b611c0e84848484612620565b1515611c1957600080fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff16601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611d26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f54686520736f6c7574696f6e206973206e6f7420756e6971756500000000000081525060200191505060405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663621e9ec0878787876040518563ffffffff1660e01b81526004018085600260200280838360005b83811015611da2578082015181840152602081019050611d87565b505050509050018460026000925b81841015611df65782846020020151600260200280838360005b83811015611de5578082015181840152602081019050611dca565b505050509050019260010192611db0565b9250505083600260200280838360005b83811015611e21578082015181840152602081019050611e06565b5050505090500182600260200280838360005b83811015611e4f578082015181840152602081019050611e34565b50505050905001945050505050602060405180830381600087803b158015611e7657600080fd5b505af1158015611e8a573d6000803e3d6000fd5b505050506040513d6020811015611ea057600080fd5b81019080805190602001909291905050501515611f25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f566572696669636174696f6e206661696c65640000000000000000000000000081525060200191505060405180910390fd5b611f2f8233612010565b50611f3a3383612361565b6001905095945050505050565b6060611f528261280b565b1515611f5d57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120045780601f10611fd957610100808354040283529160200191612004565b820191906000526020600020905b815481529060010190602001808311611fe757829003601f168201915b50505050509050919050565b600060405180604001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff16815250601460155481548110151561204e57fe5b90600052602060002090600202016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060405180604001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff16815250601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506015600081548092919060010191905055507f8ba5cdc385bc6c37c9a05ad09fbc238589c43602f4cee09c46856027df8a935a8383604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a16001905092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b612291611a4e565b151561229c57600080fd5b6122a58161287d565b50565b6000806122b483611888565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061232357508373ffffffffffffffffffffffffffffffffffffffff1661230b8461107c565b73ffffffffffffffffffffffffffffffffffffffff16145b80612334575061233381856121f5565b5b91505092915050565b612348838383612977565b6123528382612c2a565b61235c8282612dce565b505050565b61236b8282612e95565b6123758282612dce565b61237e81613064565b5050565b61238b8161280b565b15156123ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e494420646f65736e7420657869737473000000000000000000000081525060200191505060405180910390fd5b6124ab60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124985780601f1061246d57610100808354040283529160200191612498565b820191906000526020600020905b81548152906001019060200180831161247b57829003601f168201915b50505050506124a6836130b0565b6131ea565b6012600083815260200190815260200160002090805190602001906124d19291906140d6565b5050565b60006124df614156565b6124e761322e565b9050806080015151600185510114151561250057600080fd5b61250861419e565b6040518060400160405280600081526020016000815250905060008090505b8551811015612587576125788261257385608001516001850181518110151561254c57fe5b90602001906020020151898581518110151561256457fe5b90602001906020020151613688565b613724565b91508080600101915050612527565b506125ae818360800151600081518110151561259f57fe5b90602001906020020151613724565b90506125f4846000015185602001516125c6846137e1565b85604001516125d889604001516137e1565b87606001516125ea89600001516137e1565b896020015161387d565b15156126055760019250505061260c565b6000925050505b92915050565b600081600001549050919050565b60006126418473ffffffffffffffffffffffffffffffffffffffff16613a01565b15156126505760019050612803565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561272b578082015181840152602081019050612710565b50505050905090810190601f1680156127585780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561277a57600080fd5b505af115801561278e573d6000803e3d6000fd5b505050506040513d60208110156127a457600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156128b957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61298081611888565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515612a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806143436031913960400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148015612a6d5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1515612ae1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f496e76616c6964207472616e736665726564206164647265737300000000000081525060200191505060405180910390fd5b612aea81613a14565b612b31600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613ad4565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612bca600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613af7565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612c826001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613b0d90919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515612d75576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612cf357fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612d4d57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612dc791906141b8565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60001515612ea28261280b565b15151480612f1457508173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148015612f135750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b5b1515612f6b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806142d26027913960400191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613004600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613af7565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156130f8576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506131e5565b600082905060005b600082141515613126578080600101915050600a8281151561311e57fe5b049150613100565b6060816040519080825280601f01601f19166020018201604052801561315b5781602001600182028038833980820191505090505b50905060006001830390505b6000861415156131dd57600a8681151561317d57fe5b0660300160f81b82828060019003935081518110151561319957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868115156131d557fe5b049550613167565b819450505050505b919050565b60606132268383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613b2f565b905092915050565b613236614156565b60405180604001604052807f02c1b25e041091cccada898fd9b198a8068fc7fcc267ba9412216dfbe274503881526020017f0b7a57f2cc8285a2071b2ed2156748c3b4c5c077e0d42ca86791495db129074f8152508160000181905250604051806040016040528060405180604001604052807f0279b5750605052e8346febe7d395852ae9d19e0cfb25bc129d1368b9f899a8481526020017f0f5b0c10181513ec6e0353db530d5f3897fd6362831f586a4a710373a8a37e86815250815260200160405180604001604052807f1283defdbc69c9d05f7de3884363f793400623be8b9a953e54f413f79125754781526020017f04173c35a00f35d48331fad476e40ba907e35e2e4a4685764a709945a59307618152508152508160200181905250604051806040016040528060405180604001604052807f0c01078b0a483b8b2f7735366f31e553fc1cbd1d28cc1ec4ddaeb5a5c328c60b81526020017f05fd03b55db10ebf6e94486cb297f7046ac4f498030fe0b07bb2412e4ebab1b4815250815260200160405180604001604052807f1354e1c531ccfed473c95c24e250f62bb5ecba1175aa36694eb201a7a57e2bd181526020017f0c125c64e0bce235ded2a3cb791da11c1ec32e6c7c56c7366948c2acb184e33b8152508152508160400181905250604051806040016040528060405180604001604052807f238efcd46ae03ee062e12ba6a16e3823f59ee23702b8aec8351b3080609bb91381526020017f17b3813917e2d44ebdebcea586a66ec25e850e232d8a674171f8ceea68cd6f7c815250815260200160405180604001604052807f17565acabf8b35513a18d6cf07f8cc109390bb88e9c407a7ddc8b2e150f57f6e81526020017f2518672b2ee871bc90eae46e6fe5c1e93c0deac8bf1db05819e339be758f1e9a8152508152508160600181905250600360405190808252806020026020018201604052801561351d57816020015b61350a6141e4565b8152602001906001900390816135025790505b50816080018190525060405180604001604052807f2c88ade00cfb679dc7b83c6dcd4fcfcf98f87a16fbb4a4112c297951fee50c5781526020017f2f297ff2347fb3a236186165fe1d80fcf3ae318b15aca3cd5630e983834c12818152508160800151600081518110151561358e57fe5b9060200190602002018190525060405180604001604052807f08432c1e398515ad73313d552981bcabefb0ef020b5709d1f3f483b8f0f668fb81526020017f13d1e81e40ce459189061767aaf25bbc30ccc1faa8a4c02f89a0dbd6df0f0afb8152508160800151600181518110151561360357fe5b9060200190602002018190525060405180604001604052807f0169a3297e146a03870ca87ef8b64302f9d2cb95fe309156ea9bf39233184fd981526020017f17fb4007a3c57eb1df37d363be99e3c18ca10783a2c2eb423608b53cc9240ae48152508160800151600281518110151561367857fe5b9060200190602002018190525090565b61369061419e565b6136986141fe565b83600001518160006003811015156136ac57fe5b60200201818152505083602001518160016003811015156136c957fe5b602002018181525050828160026003811015156136e257fe5b6020020181815250506000606083608084600060076107d05a03f19050806000811461370d5761370f565bfe5b5080151561371c57600080fd5b505092915050565b61372c61419e565b613734614220565b836000015181600060048110151561374857fe5b602002018181525050836020015181600160048110151561376557fe5b602002018181525050826000015181600260048110151561378257fe5b602002018181525050826020015181600360048110151561379f57fe5b602002018181525050600060608360c084600060066107d05a03f1905080600081146137ca576137cc565bfe5b508015156137d957600080fd5b505092915050565b6137e961419e565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015613826575060008360200151145b1561384a576040518060400160405280600081526020016000815250915050613878565b60405180604001604052808460000151815260200182856020015181151561386e57fe5b0683038152509150505b919050565b6000606060046040519080825280602002602001820160405280156138bc57816020015b6138a96141e4565b8152602001906001900390816138a15790505b509050606060046040519080825280602002602001820160405280156138fc57816020015b6138e9614242565b8152602001906001900390816138e15790505b5090508a82600081518110151561390f57fe5b906020019060200201819052508882600181518110151561392c57fe5b906020019060200201819052508682600281518110151561394957fe5b906020019060200201819052508482600381518110151561396657fe5b906020019060200201819052508981600081518110151561398357fe5b90602001906020020181905250878160018151811015156139a057fe5b90602001906020020181905250858160028151811015156139bd57fe5b90602001906020020181905250838160038151811015156139da57fe5b906020019060200201819052506139f18282613e0f565b9250505098975050505050505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613ad15760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613aec60018260000154613b0d90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000828211151515613b1e57600080fd5b600082840390508091505092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613b8b5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613c16578881815181101515613bb957fe5b90602001015160f81c60f81b8383806001019450815181101515613bd957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613ba2565b600090505b8751811015613c8f578781815181101515613c3257fe5b90602001015160f81c60f81b8383806001019450815181101515613c5257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613c1b565b600090505b8651811015613d08578681815181101515613cab57fe5b90602001015160f81c60f81b8383806001019450815181101515613ccb57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613c94565b600090505b8551811015613d81578581815181101515613d2457fe5b90602001015160f81c60f81b8383806001019450815181101515613d4457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613d0d565b600090505b8451811015613dfa578481815181101515613d9d57fe5b90602001015160f81c60f81b8383806001019450815181101515613dbd57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613d86565b82995050505050505050505095945050505050565b600081518351141515613e2157600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015613e605781602001602082028038833980820191505090505b50905060008090505b8381101561403e578681815181101515613e7f57fe5b90602001906020020151600001518260006006840201815181101515613ea157fe5b90602001906020020181815250508681815181101515613ebd57fe5b90602001906020020151602001518260016006840201815181101515613edf57fe5b90602001906020020181815250508581815181101515613efb57fe5b90602001906020020151600001516000600281101515613f1757fe5b60200201518260026006840201815181101515613f3057fe5b90602001906020020181815250508581815181101515613f4c57fe5b90602001906020020151600001516001600281101515613f6857fe5b60200201518260036006840201815181101515613f8157fe5b90602001906020020181815250508581815181101515613f9d57fe5b90602001906020020151602001516000600281101515613fb957fe5b60200201518260046006840201815181101515613fd257fe5b90602001906020020181815250508581815181101515613fee57fe5b9060200190602002015160200151600160028110151561400a57fe5b6020020151826005600684020181518110151561402357fe5b90602001906020020181815250508080600101915050613e69565b50614047614268565b60006020826020860260208601600060086107d05a03f19050806000811461406e57614070565bfe5b5080151561407d57600080fd5b600082600060018110151561408e57fe5b602002015114159550505050505092915050565b6040518061010001604052806140b66141e4565b81526020016140c3614242565b81526020016140d06141e4565b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061411757805160ff1916838001178555614145565b82800160010185558215614145579182015b82811115614144578251825591602001919060010190614129565b5b509050614152919061428a565b5090565b604051806101e0016040528061416a6141e4565b8152602001614177614242565b8152602001614184614242565b8152602001614191614242565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156141df578183600052602060002091820191016141de919061428a565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180608001604052806142556142af565b81526020016142626142af565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b6142ac91905b808211156142a8576000816000905550600101614290565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe546f6b656e20616c726561647920657869737473206f7220496e76616c696420616464726573735472616e73616374696f6e207375636365737366756c6c792076657269666965642e6973206e6f74206f776e6572204f72206973206e6f74206973417070726f766564466f72416c6c205468652073656e6465722061646472657373206973206e6f7420746865206f776e6572206f66207468697320746f6b656ea165627a7a723058208b98ece6fbbadf3dc23a6f38f6c8a73995855736962de0caafe55c09d60bc9a0002968747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c8063621e9ec0116100f9578063b187bd2611610097578063c87b56dd11610071578063c87b56dd14610e47578063ccd0ef6914610eee578063e985e9c514610f54578063f2fde38b14610fd0576101c4565b8063b187bd2614610b9d578063b88d4fde14610bbf578063c4cf690814610cc4576101c4565b80638456cb59116100d35780638456cb5914610ad75780638da5cb5b14610ae15780638f32d59b14610b2b578063a22cb46514610b4d576101c4565b8063621e9ec0146108985780636352211e14610a1157806370a0823114610a7f576101c4565b806327dc297e1161016657806340c10f191161014057806340c10f19146106ff57806342842e0e14610765578063447ec2b7146107d35780634f6ccce714610856576101c4565b806327dc297e1461047c5780632f745c591461054157806338bbfa50146105a3576101c4565b806315070401116101a257806315070401146102ea57806317d7de7c1461036d57806318160ddd146103f057806323b872dd1461040e576101c4565b806301ffc9a7146101c9578063081812fc1461022e578063095ea7b31461029c575b600080fd5b610214600480360360208110156101df57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611014565b604051808215151515815260200191505060405180910390f35b61025a6004803603602081101561024457600080fd5b810190808035906020019092919050505061107c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102e8600480360360408110156102b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110b9565b005b6102f26112c2565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610332578082015181840152602081019050610317565b50505050905090810190601f16801561035f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610375611364565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b557808201518184015260208101905061039a565b50505050905090810190601f1680156103e25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103f8611406565b6040518082815260200191505060405180910390f35b61047a6004803603606081101561042457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611413565b005b61053f6004803603604081101561049257600080fd5b8101908080359060200190929190803590602001906401000000008111156104b957600080fd5b8201836020820111156104cb57600080fd5b803590602001918460018302840111640100000000831117156104ed57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611438565b005b61058d6004803603604081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061147b565b6040518082815260200191505060405180910390f35b6106fd600480360360608110156105b957600080fd5b8101908080359060200190929190803590602001906401000000008111156105e057600080fd5b8201836020820111156105f257600080fd5b8035906020019184600183028401116401000000008311171561061457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561067757600080fd5b82018360208201111561068957600080fd5b803590602001918460018302840111640100000000831117156106ab57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114f2565b005b61074b6004803603604081101561071557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114f7565b604051808215151515815260200191505060405180910390f35b6107d16004803603606081101561077b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611529565b005b6107db611549565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561081b578082015181840152602081019050610800565b50505050905090810190601f1680156108485780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108826004803603602081101561086c57600080fd5b81019080803590602001909291905050506115eb565b6040518082815260200191505060405180910390f35b6109f760048036036101408110156108af57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610964578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610910565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611623565b604051808215151515815260200191505060405180910390f35b610a3d60048036036020811015610a2757600080fd5b8101908080359060200190929190505050611888565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610ac160048036036020811015610a9557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118c5565b6040518082815260200191505060405180910390f35b610adf611915565b005b610ae9611a25565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b33611a4e565b604051808215151515815260200191505060405180910390f35b610b9b60048036036040811015610b6357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611aa5565b005b610ba5611be1565b604051808215151515815260200191505060405180910390f35b610cc260048036036080811015610bd557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610c3c57600080fd5b820183602082011115610c4e57600080fd5b80359060200191846001830284011164010000000083111715610c7057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611bf7565b005b610e2d6004803603610160811015610cdb57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610d90578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610d3c565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190505050611c1f565b604051808215151515815260200191505060405180910390f35b610e7360048036036020811015610e5d57600080fd5b8101908080359060200190929190505050611f47565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610eb3578082015181840152602081019050610e98565b50505050905090810190601f168015610ee05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610f3a60048036036040811015610f0457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612010565b604051808215151515815260200191505060405180910390f35b610fb660048036036040811015610f6a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121f5565b604051808215151515815260200191505060405180910390f35b61101260048036036020811015610fe657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612289565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6110c281611888565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611165576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f6973207468652073616d65206f776e6572206f662074686520746f6b656e496481525060200191505060405180910390fd5b61116d611a25565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806111ba5750600115156111b66111b0611a25565b336121f5565b1515145b1515611211576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061431b6028913960400191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b5050505050905090565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113fc5780601f106113d1576101008083540402835291602001916113fc565b820191906000526020600020905b8154815290600101906020018083116113df57829003601f168201915b5050505050905090565b6000600880549050905090565b61141d33826122a8565b151561142857600080fd5b61143383838361233d565b505050565b611477828260006040519080825280601f01601f1916602001820160405280156114715781602001600182028038833980820191505090505b506114f2565b5050565b6000611486836118c5565b8210151561149357600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156114df57fe5b9060005260206000200154905092915050565b505050565b6000611501611a4e565b151561150c57600080fd5b6115168383612361565b61151f82612382565b6001905092915050565b61154483838360405180602001604052806000815250611bf7565b505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115e15780601f106115b6576101008083540402835291602001916115e1565b820191906000526020600020905b8154815290600101906020018083116115c457829003601f168201915b5050505050905090565b60006115f5611406565b8210151561160257600080fd5b60088281548110151561161157fe5b90600052602060002001549050919050565b600061162d6140a2565b604051806040016040528087600060028110151561164757fe5b6020020151815260200187600160028110151561166057fe5b602002015181525081600001819052506040518060400160405280604051806040016040528088600060028110151561169557fe5b602002015160006002811015156116a857fe5b602002015181526020018860006002811015156116c157fe5b602002015160016002811015156116d457fe5b6020020151815250815260200160405180604001604052808860016002811015156116fb57fe5b6020020151600060028110151561170e57fe5b6020020151815260200188600160028110151561172757fe5b6020020151600160028110151561173a57fe5b60200201518152508152508160200181905250604051806040016040528085600060028110151561176757fe5b6020020151815260200185600160028110151561178057fe5b60200201518152508160400181905250606060026040519080825280602002602001820160405280156117c25781602001602082028038833980820191505090505b50905060008090505b60028110156118105784816002811015156117e257fe5b602002015182828151811015156117f557fe5b906020019060200201818152505080806001019150506117cb565b50600061181d82846124d5565b1415611879577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e396040518080602001828103825260228152602001806142f96022913960400191505060405180910390a1600192505050611880565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061190e600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612612565b9050919050565b61191d611be1565b151515611992576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b61199a611a4e565b15156119a557600080fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611ae057600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60008060149054906101000a900460ff16905090565b611c02848484611413565b611c0e84848484612620565b1515611c1957600080fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff16601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611d26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f54686520736f6c7574696f6e206973206e6f7420756e6971756500000000000081525060200191505060405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663621e9ec0878787876040518563ffffffff1660e01b81526004018085600260200280838360005b83811015611da2578082015181840152602081019050611d87565b505050509050018460026000925b81841015611df65782846020020151600260200280838360005b83811015611de5578082015181840152602081019050611dca565b505050509050019260010192611db0565b9250505083600260200280838360005b83811015611e21578082015181840152602081019050611e06565b5050505090500182600260200280838360005b83811015611e4f578082015181840152602081019050611e34565b50505050905001945050505050602060405180830381600087803b158015611e7657600080fd5b505af1158015611e8a573d6000803e3d6000fd5b505050506040513d6020811015611ea057600080fd5b81019080805190602001909291905050501515611f25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f566572696669636174696f6e206661696c65640000000000000000000000000081525060200191505060405180910390fd5b611f2f8233612010565b50611f3a3383612361565b6001905095945050505050565b6060611f528261280b565b1515611f5d57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120045780601f10611fd957610100808354040283529160200191612004565b820191906000526020600020905b815481529060010190602001808311611fe757829003601f168201915b50505050509050919050565b600060405180604001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff16815250601460155481548110151561204e57fe5b90600052602060002090600202016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060405180604001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff16815250601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506015600081548092919060010191905055507f8ba5cdc385bc6c37c9a05ad09fbc238589c43602f4cee09c46856027df8a935a8383604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a16001905092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b612291611a4e565b151561229c57600080fd5b6122a58161287d565b50565b6000806122b483611888565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061232357508373ffffffffffffffffffffffffffffffffffffffff1661230b8461107c565b73ffffffffffffffffffffffffffffffffffffffff16145b80612334575061233381856121f5565b5b91505092915050565b612348838383612977565b6123528382612c2a565b61235c8282612dce565b505050565b61236b8282612e95565b6123758282612dce565b61237e81613064565b5050565b61238b8161280b565b15156123ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e494420646f65736e7420657869737473000000000000000000000081525060200191505060405180910390fd5b6124ab60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124985780601f1061246d57610100808354040283529160200191612498565b820191906000526020600020905b81548152906001019060200180831161247b57829003601f168201915b50505050506124a6836130b0565b6131ea565b6012600083815260200190815260200160002090805190602001906124d19291906140d6565b5050565b60006124df614156565b6124e761322e565b9050806080015151600185510114151561250057600080fd5b61250861419e565b6040518060400160405280600081526020016000815250905060008090505b8551811015612587576125788261257385608001516001850181518110151561254c57fe5b90602001906020020151898581518110151561256457fe5b90602001906020020151613688565b613724565b91508080600101915050612527565b506125ae818360800151600081518110151561259f57fe5b90602001906020020151613724565b90506125f4846000015185602001516125c6846137e1565b85604001516125d889604001516137e1565b87606001516125ea89600001516137e1565b896020015161387d565b15156126055760019250505061260c565b6000925050505b92915050565b600081600001549050919050565b60006126418473ffffffffffffffffffffffffffffffffffffffff16613a01565b15156126505760019050612803565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561272b578082015181840152602081019050612710565b50505050905090810190601f1680156127585780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561277a57600080fd5b505af115801561278e573d6000803e3d6000fd5b505050506040513d60208110156127a457600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156128b957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61298081611888565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515612a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806143436031913960400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148015612a6d5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1515612ae1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f496e76616c6964207472616e736665726564206164647265737300000000000081525060200191505060405180910390fd5b612aea81613a14565b612b31600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613ad4565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612bca600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613af7565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612c826001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613b0d90919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515612d75576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612cf357fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612d4d57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612dc791906141b8565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60001515612ea28261280b565b15151480612f1457508173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148015612f135750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b5b1515612f6b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806142d26027913960400191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613004600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613af7565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156130f8576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506131e5565b600082905060005b600082141515613126578080600101915050600a8281151561311e57fe5b049150613100565b6060816040519080825280601f01601f19166020018201604052801561315b5781602001600182028038833980820191505090505b50905060006001830390505b6000861415156131dd57600a8681151561317d57fe5b0660300160f81b82828060019003935081518110151561319957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868115156131d557fe5b049550613167565b819450505050505b919050565b60606132268383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613b2f565b905092915050565b613236614156565b60405180604001604052807f02c1b25e041091cccada898fd9b198a8068fc7fcc267ba9412216dfbe274503881526020017f0b7a57f2cc8285a2071b2ed2156748c3b4c5c077e0d42ca86791495db129074f8152508160000181905250604051806040016040528060405180604001604052807f0279b5750605052e8346febe7d395852ae9d19e0cfb25bc129d1368b9f899a8481526020017f0f5b0c10181513ec6e0353db530d5f3897fd6362831f586a4a710373a8a37e86815250815260200160405180604001604052807f1283defdbc69c9d05f7de3884363f793400623be8b9a953e54f413f79125754781526020017f04173c35a00f35d48331fad476e40ba907e35e2e4a4685764a709945a59307618152508152508160200181905250604051806040016040528060405180604001604052807f0c01078b0a483b8b2f7735366f31e553fc1cbd1d28cc1ec4ddaeb5a5c328c60b81526020017f05fd03b55db10ebf6e94486cb297f7046ac4f498030fe0b07bb2412e4ebab1b4815250815260200160405180604001604052807f1354e1c531ccfed473c95c24e250f62bb5ecba1175aa36694eb201a7a57e2bd181526020017f0c125c64e0bce235ded2a3cb791da11c1ec32e6c7c56c7366948c2acb184e33b8152508152508160400181905250604051806040016040528060405180604001604052807f238efcd46ae03ee062e12ba6a16e3823f59ee23702b8aec8351b3080609bb91381526020017f17b3813917e2d44ebdebcea586a66ec25e850e232d8a674171f8ceea68cd6f7c815250815260200160405180604001604052807f17565acabf8b35513a18d6cf07f8cc109390bb88e9c407a7ddc8b2e150f57f6e81526020017f2518672b2ee871bc90eae46e6fe5c1e93c0deac8bf1db05819e339be758f1e9a8152508152508160600181905250600360405190808252806020026020018201604052801561351d57816020015b61350a6141e4565b8152602001906001900390816135025790505b50816080018190525060405180604001604052807f2c88ade00cfb679dc7b83c6dcd4fcfcf98f87a16fbb4a4112c297951fee50c5781526020017f2f297ff2347fb3a236186165fe1d80fcf3ae318b15aca3cd5630e983834c12818152508160800151600081518110151561358e57fe5b9060200190602002018190525060405180604001604052807f08432c1e398515ad73313d552981bcabefb0ef020b5709d1f3f483b8f0f668fb81526020017f13d1e81e40ce459189061767aaf25bbc30ccc1faa8a4c02f89a0dbd6df0f0afb8152508160800151600181518110151561360357fe5b9060200190602002018190525060405180604001604052807f0169a3297e146a03870ca87ef8b64302f9d2cb95fe309156ea9bf39233184fd981526020017f17fb4007a3c57eb1df37d363be99e3c18ca10783a2c2eb423608b53cc9240ae48152508160800151600281518110151561367857fe5b9060200190602002018190525090565b61369061419e565b6136986141fe565b83600001518160006003811015156136ac57fe5b60200201818152505083602001518160016003811015156136c957fe5b602002018181525050828160026003811015156136e257fe5b6020020181815250506000606083608084600060076107d05a03f19050806000811461370d5761370f565bfe5b5080151561371c57600080fd5b505092915050565b61372c61419e565b613734614220565b836000015181600060048110151561374857fe5b602002018181525050836020015181600160048110151561376557fe5b602002018181525050826000015181600260048110151561378257fe5b602002018181525050826020015181600360048110151561379f57fe5b602002018181525050600060608360c084600060066107d05a03f1905080600081146137ca576137cc565bfe5b508015156137d957600080fd5b505092915050565b6137e961419e565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015613826575060008360200151145b1561384a576040518060400160405280600081526020016000815250915050613878565b60405180604001604052808460000151815260200182856020015181151561386e57fe5b0683038152509150505b919050565b6000606060046040519080825280602002602001820160405280156138bc57816020015b6138a96141e4565b8152602001906001900390816138a15790505b509050606060046040519080825280602002602001820160405280156138fc57816020015b6138e9614242565b8152602001906001900390816138e15790505b5090508a82600081518110151561390f57fe5b906020019060200201819052508882600181518110151561392c57fe5b906020019060200201819052508682600281518110151561394957fe5b906020019060200201819052508482600381518110151561396657fe5b906020019060200201819052508981600081518110151561398357fe5b90602001906020020181905250878160018151811015156139a057fe5b90602001906020020181905250858160028151811015156139bd57fe5b90602001906020020181905250838160038151811015156139da57fe5b906020019060200201819052506139f18282613e0f565b9250505098975050505050505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613ad15760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613aec60018260000154613b0d90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000828211151515613b1e57600080fd5b600082840390508091505092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613b8b5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613c16578881815181101515613bb957fe5b90602001015160f81c60f81b8383806001019450815181101515613bd957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613ba2565b600090505b8751811015613c8f578781815181101515613c3257fe5b90602001015160f81c60f81b8383806001019450815181101515613c5257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613c1b565b600090505b8651811015613d08578681815181101515613cab57fe5b90602001015160f81c60f81b8383806001019450815181101515613ccb57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613c94565b600090505b8551811015613d81578581815181101515613d2457fe5b90602001015160f81c60f81b8383806001019450815181101515613d4457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613d0d565b600090505b8451811015613dfa578481815181101515613d9d57fe5b90602001015160f81c60f81b8383806001019450815181101515613dbd57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613d86565b82995050505050505050505095945050505050565b600081518351141515613e2157600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015613e605781602001602082028038833980820191505090505b50905060008090505b8381101561403e578681815181101515613e7f57fe5b90602001906020020151600001518260006006840201815181101515613ea157fe5b90602001906020020181815250508681815181101515613ebd57fe5b90602001906020020151602001518260016006840201815181101515613edf57fe5b90602001906020020181815250508581815181101515613efb57fe5b90602001906020020151600001516000600281101515613f1757fe5b60200201518260026006840201815181101515613f3057fe5b90602001906020020181815250508581815181101515613f4c57fe5b90602001906020020151600001516001600281101515613f6857fe5b60200201518260036006840201815181101515613f8157fe5b90602001906020020181815250508581815181101515613f9d57fe5b90602001906020020151602001516000600281101515613fb957fe5b60200201518260046006840201815181101515613fd257fe5b90602001906020020181815250508581815181101515613fee57fe5b9060200190602002015160200151600160028110151561400a57fe5b6020020151826005600684020181518110151561402357fe5b90602001906020020181815250508080600101915050613e69565b50614047614268565b60006020826020860260208601600060086107d05a03f19050806000811461406e57614070565bfe5b5080151561407d57600080fd5b600082600060018110151561408e57fe5b602002015114159550505050505092915050565b6040518061010001604052806140b66141e4565b81526020016140c3614242565b81526020016140d06141e4565b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061411757805160ff1916838001178555614145565b82800160010185558215614145579182015b82811115614144578251825591602001919060010190614129565b5b509050614152919061428a565b5090565b604051806101e0016040528061416a6141e4565b8152602001614177614242565b8152602001614184614242565b8152602001614191614242565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156141df578183600052602060002091820191016141de919061428a565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180608001604052806142556142af565b81526020016142626142af565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b6142ac91905b808211156142a8576000816000905550600101614290565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe546f6b656e20616c726561647920657869737473206f7220496e76616c696420616464726573735472616e73616374696f6e207375636365737366756c6c792076657269666965642e6973206e6f74206f776e6572204f72206973206e6f74206973417070726f766564466f72416c6c205468652073656e6465722061646472657373206973206e6f7420746865206f776e6572206f66207468697320746f6b656ea165627a7a723058208b98ece6fbbadf3dc23a6f38f6c8a73995855736962de0caafe55c09d60bc9a00029",
  "sourceMap": "301:2115:7:-;;;795:1;777:19;;367:102;8:9:-1;5:2;;;30:1;27;20:12;5:2;367:102:7;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;367:102:7;;;;;;;;;;;;;;;;20991:283:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;989:10;977:9;;:22;;;;;;;;;;;;;;;;;;1044:9;;;;;;;;;;;1014:40;;1040:1;1014:40;;;;;;;;;;;;2634:5;2624:7;;:15;;;;;;;;;;;;;;;;;;3786:40;3383:10;3805:20;;3786:18;;;:40;;:::i;:::-;5932;5806:10;5951:20;;5932:18;;;:40;;:::i;:::-;13695:51;13301:10;13714:31;;13695:18;;;:51;;:::i;:::-;21140:4;21132:5;:12;;;;;;;;;;;;:::i;:::-;;21164:6;21154:7;:16;;;;;;;;;;;;:::i;:::-;;21196:12;21180:13;:28;;;;;;;;;;;;:::i;:::-;;21218:49;20802:10;21237:29;;21218:18;;;:49;;:::i;:::-;20991:283;;;446:15:7;426:8;;:36;;;;;;;;;;;;;;;;;;367:102;301:2115;;4136:158:4;4226:10;4211:25;;:11;:25;;;;;4203:34;;;;;;;;4283:4;4247:20;:33;4268:11;4247:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;4136:158;:::o;301:2115:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "301:2115:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;301:2115:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3924:133:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3924:133:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7190:315;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7190:315:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6511:673;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6511:673:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21504:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21504:89:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21386:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21386:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14460:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8482:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8482:180:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:6;;;;;;;;;;;;;;;:::i;:::-;;14126:182:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14126:182:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14929:166:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:6;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:6;;;;;;;;;;;;;;;:::i;:::-;;23438::4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23438:166:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8668:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8668:132:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21628:101;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21628:101:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14891:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14891:148:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;23501:732:8;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;23501:732:8;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23501:732:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23501:732:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23501:732:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23501:732:8;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6276:162:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6276:162:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5985:285;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5985:285:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3051:112;;;:::i;:::-;;1358:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1234:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7797:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7797:213:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2945:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8806:211;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8806:211:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8806:211:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8806:211:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8806:211:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8806:211:4;;;;;;;;;;;;;;;:::i;:::-;;1817:594:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1817:594:7;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1817:594:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1817:594:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1817:594:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1817:594:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;21759:151:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21759:151:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21759:151:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:460:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1129:460:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8331:145:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8331:145:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1444:245;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1444:245:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;3924:133;3994:4;4017:20;:33;4038:11;4017:33;;;;;;;;;;;;;;;;;;;;;;;;;;;4010:40;;3924:133;;;:::o;7190:315::-;7249:7;7474:15;:24;7490:7;7474:24;;;;;;;;;;;;;;;;;;;;;7467:31;;7190:315;;;:::o;6511:673::-;6672:16;6680:7;6672;:16::i;:::-;6668:20;;:2;:20;;;;6660:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6861:7;:5;:7::i;:::-;6847:21;;:10;:21;;;:70;;;;6913:4;6872:45;;:37;6889:7;:5;:7::i;:::-;6898:10;6872:16;:37::i;:::-;:45;;;6847:70;6839:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7052:2;7025:15;:24;7041:7;7025:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;7169:7;7165:2;7144:33;;7153:10;7144:33;;;;;;;;;;;;6511:673;;:::o;21504:89::-;21547:13;21579:7;21572:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21504:89;:::o;21386:85::-;21427:13;21459:5;21452:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21386:85;:::o;14460:94::-;14504:7;14530:10;:17;;;;14523:24;;14460:94;:::o;8482:180::-;8572:39;8591:10;8603:7;8572:18;:39::i;:::-;8564:48;;;;;;;;8623:32;8637:4;8643:2;8647:7;8623:13;:32::i;:::-;8482:180;;;:::o;14801:122:6:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:6;;;;14876:10;:40::i;:::-;14801:122;;:::o;14126:182:4:-;14206:7;14241:16;14251:5;14241:9;:16::i;:::-;14233:5;:24;14225:33;;;;;;;;14275:12;:19;14288:5;14275:19;;;;;;;;;;;;;;;14295:5;14275:26;;;;;;;;;;;;;;;;;;14268:33;;14126:182;;;;:::o;14929:166:6:-;;;;:::o;23438::4:-;23506:4;1134:9;:7;:9::i;:::-;1126:18;;;;;;;;23522:24;23534:2;23538:7;23522:11;:24::i;:::-;23556:20;23568:7;23556:11;:20::i;:::-;23593:4;23586:11;;23438:166;;;;:::o;8668:132::-;8754:39;8771:4;8777:2;8781:7;8754:39;;;;;;;;;;;;:16;:39::i;:::-;8668:132;;;:::o;21628:101::-;21677:13;21709;21702:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21628:101;:::o;14891:148::-;14949:7;14984:13;:11;:13::i;:::-;14976:5;:21;14968:30;;;;;;;;15015:10;15026:5;15015:17;;;;;;;;;;;;;;;;;;15008:24;;14891:148;;;:::o;23501:732:8:-;23672:6;23690:18;;:::i;:::-;23728:27;;;;;;;;23744:1;23746;23744:4;;;;;;;;;;;;;23728:27;;;;23750:1;23752;23750:4;;;;;;;;;;;;;23728:27;;;23718:5;:7;;:37;;;;23775:55;;;;;;;;;;;;;;;;23792:1;23794;23792:4;;;;;;;;;;;;;23797:1;23792:7;;;;;;;;;;;;;23775:55;;;;23801:1;23803;23801:4;;;;;;;;;;;;;23806:1;23801:7;;;;;;;;;;;;;23775:55;;;;;;;;;;;;;;;23812:1;23814;23812:4;;;;;;;;;;;;;23817:1;23812:7;;;;;;;;;;;;;23775:55;;;;23821:1;23823;23821:4;;;;;;;;;;;;;23826:1;23821:7;;;;;;;;;;;;;23775:55;;;;;;23765:5;:7;;:65;;;;23850:27;;;;;;;;23866:1;23868;23866:4;;;;;;;;;;;;;23850:27;;;;23872:1;23874;23872:4;;;;;;;;;;;;;23850:27;;;23840:5;:7;;:37;;;;23887:25;23926:12;23915:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;23915:24:8;;;;23887:52;;23953:6;23962:1;23953:10;;23949:88;23969:12;23965:1;:16;23949:88;;;24018:5;24024:1;24018:8;;;;;;;;;;;;;24001:11;24013:1;24001:14;;;;;;;;;;;;;;;;;:25;;;;;23983:3;;;;;;;23949:88;;;;24080:1;24050:26;24057:11;24070:5;24050:6;:26::i;:::-;:31;24046:181;;;24102:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24169:4;24162:11;;;;;;24046:181;24211:5;24204:12;;;;23501:732;;;;;;;:::o;6276:162:4:-;6331:7;6411:11;:20;6423:7;6411:20;;;;;;;;;;;;;;;;;;;;;6404:27;;6276:162;;;:::o;5985:285::-;6040:7;6229:34;:17;:24;6247:5;6229:24;;;;;;;;;;;;;;;:32;:34::i;:::-;6222:41;;5985:285;;;:::o;3051:112::-;2851:10;:8;:10::i;:::-;2850:11;2842:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1134:9;:7;:9::i;:::-;1126:18;;;;;;;;3119:4;3109:7;;:14;;;;;;;;;;;;;;;;;;3138:18;3145:10;3138:18;;;;;;;;;;;;;;;;;;;;;;3051:112::o;1358:80::-;1396:7;1422:9;;;;;;;;;;;1415:16;;1358:80;:::o;1234:93::-;1274:4;1311:9;;;;;;;;;;;1297:23;;:10;:23;;;1290:30;;1234:93;:::o;7797:213::-;7882:10;7876:16;;:2;:16;;;;7868:25;;;;;;;;7940:8;7903:18;:30;7922:10;7903:30;;;;;;;;;;;;;;;:34;7934:2;7903:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7990:2;7963:40;;7978:10;7963:40;;;7994:8;7963:40;;;;;;;;;;;;;;;;;;;;;;7797:213;;:::o;2945:78::-;2986:4;3009:7;;;;;;;;;;;3002:14;;2945:78;:::o;8806:211::-;8912:31;8925:4;8931:2;8935:7;8912:12;:31::i;:::-;8961:48;8984:4;8990:2;8994:7;9003:5;8961:22;:48::i;:::-;8953:57;;;;;;;;8806:211;;;;:::o;1817:594:7:-;2127:4;2192:1;2155:39;;:5;:17;2161:10;2155:17;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:39;;;2147:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2243:8;;;;;;;;;;;:17;;;2261:1;2264;2267;2270:5;2243:33;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2243:33:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2243:33:7;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2243:33:7;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2243:33:7;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2243:33:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2243:33:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2243:33:7;;;;;;;;;;;;;;;;2235:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2309:32;2321:7;2330:10;2309:11;:32::i;:::-;;2351;2363:10;2375:7;2351:11;:32::i;:::-;2400:4;2393:11;;1817:594;;;;;;;:::o;21759:151:4:-;21817:13;21850:16;21858:7;21850;:16::i;:::-;21842:25;;;;;;;;21884:10;:19;21895:7;21884:19;;;;;;;;;;;21877:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21759:151;;;:::o;1129:460:7:-;1343:4;1378:41;;;;;;;;1388:13;1378:41;;;;1403:15;1378:41;;;;;1363:3;1367:7;;1363:12;;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1449:41;;;;;;;;1459:13;1449:41;;;;1474:15;1449:41;;;;;1429:5;:17;1435:10;1429:17;;;;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:7;;:9;;;;;;;;;;;;;1524:37;1530:13;1545:15;1524:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;1578:4;1571:11;;1129:460;;;;:::o;8331:145:4:-;8411:4;8434:18;:25;8453:5;8434:25;;;;;;;;;;;;;;;:35;8460:8;8434:35;;;;;;;;;;;;;;;;;;;;;;;;;8427:42;;8331:145;;;;:::o;1444:245::-;1134:9;:7;:9::i;:::-;1126:18;;;;;;;;1654:28;1673:8;1654:18;:28::i;:::-;1444:245;:::o;9723:246::-;9808:4;9824:13;9840:16;9848:7;9840;:16::i;:::-;9824:32;;9885:5;9874:16;;:7;:16;;;:51;;;;9918:7;9894:31;;:20;9906:7;9894:11;:20::i;:::-;:31;;;9874:51;:87;;;;9929:32;9946:5;9953:7;9929:16;:32::i;:::-;9874:87;9866:96;;;9723:246;;;;:::o;15414:239::-;15499:38;15519:4;15525:2;15529:7;15499:19;:38::i;:::-;15548:47;15581:4;15587:7;15548:32;:47::i;:::-;15606:40;15634:2;15638:7;15606:27;:40::i;:::-;15414:239;;;:::o;15908:196::-;15971:24;15983:2;15987:7;15971:11;:24::i;:::-;16006:40;16034:2;16038:7;16006:27;:40::i;:::-;16057;16089:7;16057:31;:40::i;:::-;15908:196;;:::o;22412:189::-;22477:16;22485:7;22477;:16::i;:::-;22469:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22551:43;22561:13;22551:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22576:17;22585:7;22576:8;:17::i;:::-;22551:9;:43::i;:::-;22529:10;:19;22540:7;22529:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;22412:189;:::o;22740:726:8:-;22815:4;22831:22;;:::i;:::-;22856:14;:12;:14::i;:::-;22831:39;;22908:2;:11;;;:18;22903:1;22888:5;:12;:16;:38;22880:47;;;;;;;;22984:27;;:::i;:::-;23014:21;;;;;;;;23030:1;23014:21;;;;23033:1;23014:21;;;22984:51;;23050:6;23059:1;23050:10;;23045:131;23066:5;:12;23062:1;:16;23045:131;;;23104:72;23121:4;23127:48;23146:2;:11;;;23162:1;23158;:5;23146:18;;;;;;;;;;;;;;;;;;23166:5;23172:1;23166:8;;;;;;;;;;;;;;;;;;23127:18;:48::i;:::-;23104:16;:72::i;:::-;23097:79;;23080:3;;;;;;;23045:131;;;;23193:38;23210:4;23216:2;:11;;;23228:1;23216:14;;;;;;;;;;;;;;;;;;23193:16;:38::i;:::-;23186:45;;23245:186;23280:5;:7;;;23289:5;:7;;;23311:20;23326:4;23311:14;:20::i;:::-;23333:2;:8;;;23356:23;23371:5;:7;;;23356:14;:23::i;:::-;23381:2;:8;;;23404:20;23419:2;:4;;;23404:14;:20::i;:::-;23426:2;:4;;;23245:20;:186::i;:::-;23244:187;23241:200;;;23440:1;23433:8;;;;;;23241:200;23458:1;23451:8;;;;22740:726;;;;;:::o;1062:112:0:-;1127:7;1153;:14;;;1146:21;;1062:112;;;:::o;12146:347:4:-;12267:4;12292:15;:2;:13;;;:15::i;:::-;12291:16;12287:58;;;12330:4;12323:11;;;;12287:58;12355:13;12387:2;12371:36;;;12408:10;12420:4;12426:7;12435:5;12371:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12371:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12371:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12371:70:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12371:70:4;;;;;;;;;;;;;;;;12355:86;;4939:10;12469:16;;12459:26;;;:6;:26;;;;12451:35;;;12146:347;;;;;;;:::o;9211:152::-;9268:4;9284:13;9300:11;:20;9312:7;9300:20;;;;;;;;;;;;;;;;;;;;;9284:36;;9354:1;9337:19;;:5;:19;;;;9330:26;;;9211:152;;;:::o;1750:186::-;1843:1;1823:22;;:8;:22;;;;1815:31;;;;;;;;1890:8;1861:38;;1879:9;;;;;;;;;;;1861:38;;;;;;;;;;;;1921:8;1909:9;;:20;;;;;;;;;;;;;;;;;;1750:186;:::o;10840:778::-;11013:16;11021:7;11013;:16::i;:::-;11005:24;;:4;:24;;;10996:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11184:2;11170:17;;:2;:17;;;:37;;;;;11205:1;11191:16;;:2;:16;;;;11170:37;11161:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11280:23;11295:7;11280:14;:23::i;:::-;11388:35;:17;:23;11406:4;11388:23;;;;;;;;;;;;;;;:33;:35::i;:::-;11456:2;11433:11;:20;11445:7;11433:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11468:33;:17;:21;11486:2;11468:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11603:7;11599:2;11584:27;;11593:4;11584:27;;;;;;;;;;;;10840:778;;;:::o;17880:1128::-;18142:22;18167:32;18197:1;18167:12;:18;18180:4;18167:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;18142:57;;18209:18;18230:17;:26;18248:7;18230:26;;;;;;;;;;;;18209:47;;18374:14;18360:10;:28;;18356:323;;;18404:19;18426:12;:18;18439:4;18426:18;;;;;;;;;;;;;;;18445:14;18426:34;;;;;;;;;;;;;;;;;;18404:56;;18508:11;18475:12;:18;18488:4;18475:18;;;;;;;;;;;;;;;18494:10;18475:30;;;;;;;;;;;;;;;;;:44;;;;18624:10;18591:17;:30;18609:11;18591:30;;;;;;;;;;;:43;;;;18356:323;;18765:12;:18;18778:4;18765:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17880:1128;;;;:::o;16726:183::-;16839:12;:16;16852:2;16839:16;;;;;;;;;;;;;;;:23;;;;16810:17;:26;16828:7;16810:26;;;;;;;;;;;:52;;;;16872:12;:16;16885:2;16872:16;;;;;;;;;;;;;;;16894:7;16872:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16872:30:4;;;;;;;;;;;;;;;;;;;;;;16726:183;;:::o;10126:515::-;10301:5;10281:25;;:16;10289:7;10281;:16::i;:::-;:25;;;:70;;;;10326:2;10312:17;;:2;:17;;;:37;;;;;10347:1;10333:16;;:2;:16;;;;10312:37;10281:70;10273:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10505:2;10482:11;:20;10494:7;10482:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10517:33;:17;:21;10535:2;10517:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10626:7;10622:2;10601:33;;10618:1;10601:33;;;;;;;;;;;;10126:515;;:::o;17104:161::-;17207:10;:17;;;;17180:15;:24;17196:7;17180:24;;;;;;;;;;;:44;;;;17234:10;17250:7;17234:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17234:24:4;;;;;;;;;;;;;;;;;;;;;;17104:161;:::o;43271:465:6:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;;43456:66;;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:6;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;;43601:100;;;43664:2;43659;:7;;;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;20795:1940:8:-;20842:22;;:::i;:::-;20883:169;;;;;;;;20907:66;20883:169;;;;20984:66;20883:169;;;20876:2;:4;;:176;;;;21069:327;;;;;;;;;;;;;;;;21094:66;21069:327;;;;21171:66;21069:327;;;;;;;;;;;;;;;21250:66;21069:327;;;;21327:66;21069:327;;;;;;21062:2;:4;;:334;;;;21417:327;;;;;;;;;;;;;;;;21442:66;21417:327;;;;21519:66;21417:327;;;;;;;;;;;;;;;21598:66;21417:327;;;;21675:66;21417:327;;;;;;21406:2;:8;;:338;;;;21765:327;;;;;;;;;;;;;;;;21790:66;21765:327;;;;21867:66;21765:327;;;;;;;;;;;;;;;21946:66;21765:327;;;;22023:66;21765:327;;;;;;21754:2;:8;;:338;;;;22138:1;22116:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22102:2;:11;;:38;;;;22167:169;;;;;;;;22191:66;22167:169;;;;22268:66;22167:169;;;22150:2;:11;;;22162:1;22150:14;;;;;;;;;;;;;;;;;:186;;;;22363:169;;;;;;;;22387:66;22363:169;;;;22464:66;22363:169;;;22346:2;:11;;;22358:1;22346:14;;;;;;;;;;;;;;;;;:186;;;;22559:169;;;;;;;;22583:66;22559:169;;;;22660:66;22559:169;;;22542:2;:11;;;22554:1;22542:14;;;;;;;;;;;;;;;;;:186;;;;20795:1940;:::o;17339:444::-;17403:16;;:::i;:::-;17431:20;;:::i;:::-;17472:1;:3;;;17461:5;17467:1;17461:8;;;;;;;;;;;;:14;;;;;17496:1;:3;;;17485:5;17491:1;17485:8;;;;;;;;;;;;:14;;;;;17520:1;17509:5;17515:1;17509:8;;;;;;;;;;;;:12;;;;;17531;17630:4;17627:1;17621:4;17614:5;17611:1;17608;17601:4;17596:3;17592:14;17587:48;17576:59;;17712:7;17725:1;17720:20;;;;17705:35;;17720:20;17729:9;17705:35;;17768:7;17759:17;;;;;;;;17339:444;;;;;;:::o;16422:483::-;16496:16;;:::i;:::-;16524:20;;:::i;:::-;16565:2;:4;;;16554:5;16560:1;16554:8;;;;;;;;;;;;:15;;;;;16590:2;:4;;;16579:5;16585:1;16579:8;;;;;;;;;;;;:15;;;;;16615:2;:4;;;16604:5;16610:1;16604:8;;;;;;;;;;;;:15;;;;;16640:2;:4;;;16629:5;16635:1;16629:8;;;;;;;;;;;;:15;;;;;16654:12;16753:4;16750:1;16744:4;16737:5;16734:1;16731;16724:4;16719:3;16715:14;16710:48;16699:59;;16835:7;16848:1;16843:20;;;;16828:35;;16843:20;16852:9;16828:35;;16890:7;16882:16;;;;;;;;16422:483;;;;;;:::o;16033:340::-;16090:14;;:::i;:::-;16168:6;16177:77;16168:86;;16275:1;16268;:3;;;:8;:20;;;;;16287:1;16280;:3;;;:8;16268:20;16264:58;;;16309:13;;;;;;;;16317:1;16309:13;;;;16320:1;16309:13;;;16302:20;;;;;16264:58;16339:27;;;;;;;;16347:1;:3;;;16339:27;;;;16363:1;16357;:3;;;:7;;;;;;;;16352:1;:13;16339:27;;;16332:34;;;16033:340;;;;:::o;19905:547::-;20151:4;20167:19;20203:1;20189:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20167:38;;20215:19;20251:1;20237:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20215:38;;20271:2;20263;20266:1;20263:5;;;;;;;;;;;;;;;;;:10;;;;20291:2;20283;20286:1;20283:5;;;;;;;;;;;;;;;;;:10;;;;20311:2;20303;20306:1;20303:5;;;;;;;;;;;;;;;;;:10;;;;20331:2;20323;20326:1;20323:5;;;;;;;;;;;;;;;;;:10;;;;20351:2;20343;20346:1;20343:5;;;;;;;;;;;;;;;;;:10;;;;20371:2;20363;20366:1;20363:5;;;;;;;;;;;;;;;;;:10;;;;20391:2;20383;20386:1;20383:5;;;;;;;;;;;;;;;;;:10;;;;20411:2;20403;20406:1;20403:5;;;;;;;;;;;;;;;;;:10;;;;20430:15;20438:2;20442;20430:7;:15::i;:::-;20423:22;;;;19905:547;;;;;;;;;;:::o;463:616:3:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;12574:171:4:-;12673:1;12637:38;;:15;:24;12653:7;12637:24;;;;;;;;;;;;;;;;;;;;;:38;;;;12633:106;;;12726:1;12691:15;:24;12707:7;12691:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12633:106;12574:171;:::o;1275:108:0:-;1355:21;1374:1;1355:7;:14;;;:18;;:21;;;;:::i;:::-;1338:7;:14;;:38;;;;1275:108;:::o;1180:89::-;1261:1;1243:7;:14;;;:19;;;;;;;;;;;1180:89;:::o;1211:145:1:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;40282:1020:6:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:6;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;17994:913:8:-;18071:4;18108:2;:9;18095:2;:9;:22;18087:31;;;;;;;;18128:13;18144:2;:9;18128:25;;18163:14;18191:1;18180:8;:12;18163:29;;18202:19;18235:9;18224:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18224:21:8;;;;18202:43;;18260:6;18269:1;18260:10;;18255:307;18276:8;18272:1;:12;18255:307;;;18332:2;18335:1;18332:5;;;;;;;;;;;;;;;;;;:7;;;18313:5;18327:1;18323;18319;:5;:9;18313:16;;;;;;;;;;;;;;;;;:26;;;;;18372:2;18375:1;18372:5;;;;;;;;;;;;;;;;;;:7;;;18353:5;18367:1;18363;18359;:5;:9;18353:16;;;;;;;;;;;;;;;;;:26;;;;;18412:2;18415:1;18412:5;;;;;;;;;;;;;;;;;;:7;;;18420:1;18412:10;;;;;;;;;;;;;18393:5;18407:1;18403;18399;:5;:9;18393:16;;;;;;;;;;;;;;;;;:29;;;;;18455:2;18458:1;18455:5;;;;;;;;;;;;;;;;;;:7;;;18463:1;18455:10;;;;;;;;;;;;;18436:5;18450:1;18446;18442;:5;:9;18436:16;;;;;;;;;;;;;;;;;:29;;;;;18498:2;18501:1;18498:5;;;;;;;;;;;;;;;;;;:7;;;18506:1;18498:10;;;;;;;;;;;;;18479:5;18493:1;18489;18485;:5;:9;18479:16;;;;;;;;;;;;;;;;;:29;;;;;18541:2;18544:1;18541:5;;;;;;;;;;;;;;;;;;:7;;;18549:1;18541:10;;;;;;;;;;;;;18522:5;18536:1;18532;18528;:5;:9;18522:16;;;;;;;;;;;;;;;;;:29;;;;;18286:3;;;;;;;18255:307;;;;18571:18;;:::i;:::-;18599:12;18727:4;18722:3;18715:4;18704:9;18700:20;18693:4;18686:5;18682:16;18679:1;18676;18669:4;18664:3;18660:14;18655:77;18644:88;;18809:7;18822:1;18817:20;;;;18802:35;;18817:20;18826:9;18802:35;;18864:7;18856:16;;;;;;;;18899:1;18889:3;18893:1;18889:6;;;;;;;;;;;;;:11;;18882:18;;;;;;;17994:913;;;;:::o;301:2115:7:-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:2115:7;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:2115:7;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:2115:7;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:2115:7;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport './Verifier.sol';\nimport './ERC721Mintable.sol';\n\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is CustomERC721Token, Verifier {\n\n    constructor(address verifierAddress) public \n    {\n        verifier = Verifier(verifierAddress);\n    }\n\n    // \n    Verifier private verifier;\n\n    // TODO define a solutions struct that can hold an index & an address\n    struct solutions {\n        uint256 index;\n        address Address;\n    }\n\n    // TODO define an array of the above struct\n    solutions[] private sol;\n\n    // solutions array counter \n    uint256 counter = 0;\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(address => solutions ) private store;\n\n\n    // TODO Create an event to emit when a solution is added\n    event Added(uint256 solutionsIndex, address solutionsAdd);\n\n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(\n                            uint256 recievedIndex,\n                            address recievedAddress\n                        )\n                        public\n                        returns(bool)\n    {\n        sol[counter] = solutions(recievedIndex, recievedAddress);\n        store[msg.sender] = solutions(recievedIndex, recievedAddress);\n        counter++;\n        emit Added(recievedIndex, recievedAddress);\n        return true;\n    }\n\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function newMint(\n                        uint[2] memory a,\n                        uint[2][2] memory b,\n                        uint[2] memory c,\n                        uint[2] memory input,\n                        uint256 tokenId\n                    )\n                    public\n                    returns(bool)\n    {\n        require(store[msg.sender].Address == address(0), \"The solution is not unique\");\n        require(verifier.verifyTx(a, b, c, input),\"Verification failed\");\n        addSolution(tokenId, msg.sender);\n        super._mint(msg.sender, tokenId);\n        return true;\n    }\n  \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "E:\\Blockchain-Capstone-master\\eth-contracts\\contracts\\SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7847
      ]
    },
    "id": 7848,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7700,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:7"
      },
      {
        "absolutePath": "project:/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7701,
        "nodeType": "ImportDirective",
        "scope": 7848,
        "sourceUnit": 10443,
        "src": "141:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7702,
        "nodeType": "ImportDirective",
        "scope": 7848,
        "sourceUnit": 1374,
        "src": "166:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7703,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1373,
              "src": "332:17:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1373",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7704,
            "nodeType": "InheritanceSpecifier",
            "src": "332:17:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7705,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10442,
              "src": "351:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10442",
                "typeString": "contract Verifier"
              }
            },
            "id": 7706,
            "nodeType": "InheritanceSpecifier",
            "src": "351:8:7"
          }
        ],
        "contractDependencies": [
          306,
          934,
          1232,
          1342,
          390,
          436,
          1373,
          7698,
          10442
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7847,
        "linearizedBaseContracts": [
          7847,
          10442,
          1373,
          1342,
          7698,
          1232,
          934,
          436,
          390,
          306
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7717,
              "nodeType": "Block",
              "src": "416:53:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7711,
                      "name": "verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7720,
                      "src": "426:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$10442",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7713,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7708,
                          "src": "446:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7712,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10442,
                        "src": "437:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$10442_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "437:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$10442",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "426:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$10442",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7716,
                  "nodeType": "ExpressionStatement",
                  "src": "426:36:7"
                }
              ]
            },
            "documentation": null,
            "id": 7718,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7708,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7718,
                  "src": "379:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "378:25:7"
            },
            "returnParameters": {
              "id": 7710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "416:0:7"
            },
            "scope": 7847,
            "src": "367:102:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7720,
            "name": "verifier",
            "nodeType": "VariableDeclaration",
            "scope": 7847,
            "src": "483:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$10442",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7719,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10442,
              "src": "483:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10442",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "SolnSquareVerifier.solutions",
            "id": 7725,
            "members": [
              {
                "constant": false,
                "id": 7722,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7725,
                "src": "616:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7721,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "616:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7724,
                "name": "Address",
                "nodeType": "VariableDeclaration",
                "scope": 7725,
                "src": "639:15:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7723,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "639:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "solutions",
            "nodeType": "StructDefinition",
            "scope": 7847,
            "src": "589:72:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7728,
            "name": "sol",
            "nodeType": "VariableDeclaration",
            "scope": 7847,
            "src": "715:23:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_solutions_$7725_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.solutions[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7726,
                "name": "solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7725,
                "src": "715:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_solutions_$7725_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.solutions"
                }
              },
              "id": 7727,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "715:11:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_solutions_$7725_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.solutions[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7731,
            "name": "counter",
            "nodeType": "VariableDeclaration",
            "scope": 7847,
            "src": "777:19:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7729,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "777:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7730,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "795:1:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7735,
            "name": "store",
            "nodeType": "VariableDeclaration",
            "scope": 7847,
            "src": "868:44:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_solutions_$7725_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.solutions)"
            },
            "typeName": {
              "id": 7734,
              "keyType": {
                "id": 7732,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "876:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "868:30:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_solutions_$7725_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.solutions)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7733,
                "name": "solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7725,
                "src": "887:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_solutions_$7725_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.solutions"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7741,
            "name": "Added",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7737,
                  "indexed": false,
                  "name": "solutionsIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "993:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7739,
                  "indexed": false,
                  "name": "solutionsAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "1017:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1017:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "992:46:7"
            },
            "src": "981:58:7"
          },
          {
            "body": {
              "id": 7779,
              "nodeType": "Block",
              "src": "1353:236:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7750,
                        "name": "sol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7728,
                        "src": "1363:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_solutions_$7725_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.solutions storage ref[] storage ref"
                        }
                      },
                      "id": 7752,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7751,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7731,
                        "src": "1367:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1363:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7725_storage",
                        "typeString": "struct SolnSquareVerifier.solutions storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7754,
                          "name": "recievedIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7743,
                          "src": "1388:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7755,
                          "name": "recievedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7745,
                          "src": "1403:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7753,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7725,
                        "src": "1378:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_solutions_$7725_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.solutions storage pointer)"
                        }
                      },
                      "id": 7756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1378:41:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7725_memory",
                        "typeString": "struct SolnSquareVerifier.solutions memory"
                      }
                    },
                    "src": "1363:56:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_solutions_$7725_storage",
                      "typeString": "struct SolnSquareVerifier.solutions storage ref"
                    }
                  },
                  "id": 7758,
                  "nodeType": "ExpressionStatement",
                  "src": "1363:56:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7759,
                        "name": "store",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7735,
                        "src": "1429:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_solutions_$7725_storage_$",
                          "typeString": "mapping(address => struct SolnSquareVerifier.solutions storage ref)"
                        }
                      },
                      "id": 7762,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7760,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10457,
                          "src": "1435:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1435:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1429:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7725_storage",
                        "typeString": "struct SolnSquareVerifier.solutions storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7764,
                          "name": "recievedIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7743,
                          "src": "1459:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7765,
                          "name": "recievedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7745,
                          "src": "1474:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7763,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7725,
                        "src": "1449:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_solutions_$7725_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.solutions storage pointer)"
                        }
                      },
                      "id": 7766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1449:41:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7725_memory",
                        "typeString": "struct SolnSquareVerifier.solutions memory"
                      }
                    },
                    "src": "1429:61:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_solutions_$7725_storage",
                      "typeString": "struct SolnSquareVerifier.solutions storage ref"
                    }
                  },
                  "id": 7768,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:61:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1500:9:7",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 7769,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7731,
                      "src": "1500:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7771,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:9:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7773,
                        "name": "recievedIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7743,
                        "src": "1530:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7774,
                        "name": "recievedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7745,
                        "src": "1545:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7772,
                      "name": "Added",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7741,
                      "src": "1524:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1524:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7776,
                  "nodeType": "EmitStatement",
                  "src": "1519:42:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1578:4:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7749,
                  "id": 7778,
                  "nodeType": "Return",
                  "src": "1571:11:7"
                }
              ]
            },
            "documentation": null,
            "id": 7780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7743,
                  "name": "recievedIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 7780,
                  "src": "1179:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7745,
                  "name": "recievedAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7780,
                  "src": "1230:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1149:130:7"
            },
            "returnParameters": {
              "id": 7749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7748,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7780,
                  "src": "1343:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7747,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1342:6:7"
            },
            "scope": 7847,
            "src": "1129:460:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7845,
              "nodeType": "Block",
              "src": "2137:274:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7806,
                              "name": "store",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7735,
                              "src": "2155:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_solutions_$7725_storage_$",
                                "typeString": "mapping(address => struct SolnSquareVerifier.solutions storage ref)"
                              }
                            },
                            "id": 7809,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7807,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10457,
                                "src": "2161:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2161:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2155:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_solutions_$7725_storage",
                              "typeString": "struct SolnSquareVerifier.solutions storage ref"
                            }
                          },
                          "id": 7810,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Address",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7724,
                          "src": "2155:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2192:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2184:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2184:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2155:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520736f6c7574696f6e206973206e6f7420756e69717565",
                        "id": 7815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2196:28:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca1d8660fcf8b1745372051b11db5b7c5b941e63563055b04647b4894f337aca",
                          "typeString": "literal_string \"The solution is not unique\""
                        },
                        "value": "The solution is not unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca1d8660fcf8b1745372051b11db5b7c5b941e63563055b04647b4894f337aca",
                          "typeString": "literal_string \"The solution is not unique\""
                        }
                      ],
                      "id": 7805,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10460,
                        10461
                      ],
                      "referencedDeclaration": 10461,
                      "src": "2147:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2147:78:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7817,
                  "nodeType": "ExpressionStatement",
                  "src": "2147:78:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7821,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7784,
                            "src": "2261:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7822,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7790,
                            "src": "2264:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7823,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7794,
                            "src": "2267:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7824,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7798,
                            "src": "2270:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7819,
                            "name": "verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7720,
                            "src": "2243:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verifier_$10442",
                              "typeString": "contract Verifier"
                            }
                          },
                          "id": 7820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10441,
                          "src": "2243:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) external returns (bool)"
                          }
                        },
                        "id": 7825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2243:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "566572696669636174696f6e206661696c6564",
                        "id": 7826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2277:21:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0",
                          "typeString": "literal_string \"Verification failed\""
                        },
                        "value": "Verification failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0",
                          "typeString": "literal_string \"Verification failed\""
                        }
                      ],
                      "id": 7818,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10460,
                        10461
                      ],
                      "referencedDeclaration": 10461,
                      "src": "2235:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2235:64:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7828,
                  "nodeType": "ExpressionStatement",
                  "src": "2235:64:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7830,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7800,
                        "src": "2321:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7831,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10457,
                          "src": "2330:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2330:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7829,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7780,
                      "src": "2309:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) returns (bool)"
                      }
                    },
                    "id": 7833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7834,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:32:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7838,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10457,
                          "src": "2363:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2363:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7840,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7800,
                        "src": "2375:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7835,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10514,
                        "src": "2351:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7847",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1069,
                      "src": "2351:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2351:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7842,
                  "nodeType": "ExpressionStatement",
                  "src": "2351:32:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2400:4:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7804,
                  "id": 7844,
                  "nodeType": "Return",
                  "src": "2393:11:7"
                }
              ]
            },
            "documentation": null,
            "id": 7846,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7784,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7846,
                  "src": "1859:16:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7781,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1859:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7783,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1864:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1859:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7790,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7846,
                  "src": "1901:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7785,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1901:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7787,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1906:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1901:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7789,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1909:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1901:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7794,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7846,
                  "src": "1946:16:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7791,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1946:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7793,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1951:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1946:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7798,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7846,
                  "src": "1988:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7795,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1988:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7797,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1993:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1988:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7800,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7846,
                  "src": "2034:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1833:238:7"
            },
            "returnParameters": {
              "id": 7804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7803,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7846,
                  "src": "2127:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7802,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2126:6:7"
            },
            "scope": 7847,
            "src": "1817:594:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7848,
        "src": "301:2115:7"
      }
    ],
    "src": "0:2440:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7847
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7700,
        "name": "PragmaDirective",
        "src": "0:32:7"
      },
      {
        "attributes": {
          "SourceUnit": 10443,
          "absolutePath": "project:/contracts/Verifier.sol",
          "file": "./Verifier.sol",
          "scope": 7848,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7701,
        "name": "ImportDirective",
        "src": "141:24:7"
      },
      {
        "attributes": {
          "SourceUnit": 1374,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7848,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7702,
        "name": "ImportDirective",
        "src": "166:30:7"
      },
      {
        "attributes": {
          "contractDependencies": [
            306,
            934,
            1232,
            1342,
            390,
            436,
            1373,
            7698,
            10442
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7847,
            10442,
            1373,
            1342,
            7698,
            1232,
            934,
            436,
            390,
            306
          ],
          "name": "SolnSquareVerifier",
          "scope": 7848
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1373,
                  "type": "contract CustomERC721Token"
                },
                "id": 7703,
                "name": "UserDefinedTypeName",
                "src": "332:17:7"
              }
            ],
            "id": 7704,
            "name": "InheritanceSpecifier",
            "src": "332:17:7"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10442,
                  "type": "contract Verifier"
                },
                "id": 7705,
                "name": "UserDefinedTypeName",
                "src": "351:8:7"
              }
            ],
            "id": 7706,
            "name": "InheritanceSpecifier",
            "src": "351:8:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 7847,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "verifierAddress",
                      "scope": 7718,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7707,
                        "name": "ElementaryTypeName",
                        "src": "379:7:7"
                      }
                    ],
                    "id": 7708,
                    "name": "VariableDeclaration",
                    "src": "379:23:7"
                  }
                ],
                "id": 7709,
                "name": "ParameterList",
                "src": "378:25:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7710,
                "name": "ParameterList",
                "src": "416:0:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Verifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7720,
                              "type": "contract Verifier",
                              "value": "verifier"
                            },
                            "id": 7711,
                            "name": "Identifier",
                            "src": "426:8:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract Verifier",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10442,
                                  "type": "type(contract Verifier)",
                                  "value": "Verifier"
                                },
                                "id": 7712,
                                "name": "Identifier",
                                "src": "437:8:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7708,
                                  "type": "address",
                                  "value": "verifierAddress"
                                },
                                "id": 7713,
                                "name": "Identifier",
                                "src": "446:15:7"
                              }
                            ],
                            "id": 7714,
                            "name": "FunctionCall",
                            "src": "437:25:7"
                          }
                        ],
                        "id": 7715,
                        "name": "Assignment",
                        "src": "426:36:7"
                      }
                    ],
                    "id": 7716,
                    "name": "ExpressionStatement",
                    "src": "426:36:7"
                  }
                ],
                "id": 7717,
                "name": "Block",
                "src": "416:53:7"
              }
            ],
            "id": 7718,
            "name": "FunctionDefinition",
            "src": "367:102:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "verifier",
              "scope": 7847,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Verifier",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10442,
                  "type": "contract Verifier"
                },
                "id": 7719,
                "name": "UserDefinedTypeName",
                "src": "483:8:7"
              }
            ],
            "id": 7720,
            "name": "VariableDeclaration",
            "src": "483:25:7"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.solutions",
              "name": "solutions",
              "scope": 7847,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7725,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7721,
                    "name": "ElementaryTypeName",
                    "src": "616:7:7"
                  }
                ],
                "id": 7722,
                "name": "VariableDeclaration",
                "src": "616:13:7"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "Address",
                  "scope": 7725,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7723,
                    "name": "ElementaryTypeName",
                    "src": "639:7:7"
                  }
                ],
                "id": 7724,
                "name": "VariableDeclaration",
                "src": "639:15:7"
              }
            ],
            "id": 7725,
            "name": "StructDefinition",
            "src": "589:72:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "sol",
              "scope": 7847,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.solutions[]",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.solutions[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "solutions",
                      "referencedDeclaration": 7725,
                      "type": "struct SolnSquareVerifier.solutions"
                    },
                    "id": 7726,
                    "name": "UserDefinedTypeName",
                    "src": "715:9:7"
                  }
                ],
                "id": 7727,
                "name": "ArrayTypeName",
                "src": "715:11:7"
              }
            ],
            "id": 7728,
            "name": "VariableDeclaration",
            "src": "715:23:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "counter",
              "scope": 7847,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 7729,
                "name": "ElementaryTypeName",
                "src": "777:7:7"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 7730,
                "name": "Literal",
                "src": "795:1:7"
              }
            ],
            "id": 7731,
            "name": "VariableDeclaration",
            "src": "777:19:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "store",
              "scope": 7847,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct SolnSquareVerifier.solutions)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct SolnSquareVerifier.solutions)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 7732,
                    "name": "ElementaryTypeName",
                    "src": "876:7:7"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "solutions",
                      "referencedDeclaration": 7725,
                      "type": "struct SolnSquareVerifier.solutions"
                    },
                    "id": 7733,
                    "name": "UserDefinedTypeName",
                    "src": "887:9:7"
                  }
                ],
                "id": 7734,
                "name": "Mapping",
                "src": "868:30:7"
              }
            ],
            "id": 7735,
            "name": "VariableDeclaration",
            "src": "868:44:7"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "Added"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "solutionsIndex",
                      "scope": 7741,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7736,
                        "name": "ElementaryTypeName",
                        "src": "993:7:7"
                      }
                    ],
                    "id": 7737,
                    "name": "VariableDeclaration",
                    "src": "993:22:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "solutionsAdd",
                      "scope": 7741,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7738,
                        "name": "ElementaryTypeName",
                        "src": "1017:7:7"
                      }
                    ],
                    "id": 7739,
                    "name": "VariableDeclaration",
                    "src": "1017:20:7"
                  }
                ],
                "id": 7740,
                "name": "ParameterList",
                "src": "992:46:7"
              }
            ],
            "id": 7741,
            "name": "EventDefinition",
            "src": "981:58:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7847,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "recievedIndex",
                      "scope": 7780,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7742,
                        "name": "ElementaryTypeName",
                        "src": "1179:7:7"
                      }
                    ],
                    "id": 7743,
                    "name": "VariableDeclaration",
                    "src": "1179:21:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "recievedAddress",
                      "scope": 7780,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7744,
                        "name": "ElementaryTypeName",
                        "src": "1230:7:7"
                      }
                    ],
                    "id": 7745,
                    "name": "VariableDeclaration",
                    "src": "1230:23:7"
                  }
                ],
                "id": 7746,
                "name": "ParameterList",
                "src": "1149:130:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 7780,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7747,
                        "name": "ElementaryTypeName",
                        "src": "1343:4:7"
                      }
                    ],
                    "id": 7748,
                    "name": "VariableDeclaration",
                    "src": "1343:4:7"
                  }
                ],
                "id": 7749,
                "name": "ParameterList",
                "src": "1342:6:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.solutions storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.solutions storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7728,
                                  "type": "struct SolnSquareVerifier.solutions storage ref[] storage ref",
                                  "value": "sol"
                                },
                                "id": 7750,
                                "name": "Identifier",
                                "src": "1363:3:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7731,
                                  "type": "uint256",
                                  "value": "counter"
                                },
                                "id": 7751,
                                "name": "Identifier",
                                "src": "1367:7:7"
                              }
                            ],
                            "id": 7752,
                            "name": "IndexAccess",
                            "src": "1363:12:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct SolnSquareVerifier.solutions memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7725,
                                  "type": "type(struct SolnSquareVerifier.solutions storage pointer)",
                                  "value": "solutions"
                                },
                                "id": 7753,
                                "name": "Identifier",
                                "src": "1378:9:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7743,
                                  "type": "uint256",
                                  "value": "recievedIndex"
                                },
                                "id": 7754,
                                "name": "Identifier",
                                "src": "1388:13:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7745,
                                  "type": "address",
                                  "value": "recievedAddress"
                                },
                                "id": 7755,
                                "name": "Identifier",
                                "src": "1403:15:7"
                              }
                            ],
                            "id": 7756,
                            "name": "FunctionCall",
                            "src": "1378:41:7"
                          }
                        ],
                        "id": 7757,
                        "name": "Assignment",
                        "src": "1363:56:7"
                      }
                    ],
                    "id": 7758,
                    "name": "ExpressionStatement",
                    "src": "1363:56:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.solutions storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.solutions storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7735,
                                  "type": "mapping(address => struct SolnSquareVerifier.solutions storage ref)",
                                  "value": "store"
                                },
                                "id": 7759,
                                "name": "Identifier",
                                "src": "1429:5:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10457,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 7760,
                                    "name": "Identifier",
                                    "src": "1435:3:7"
                                  }
                                ],
                                "id": 7761,
                                "name": "MemberAccess",
                                "src": "1435:10:7"
                              }
                            ],
                            "id": 7762,
                            "name": "IndexAccess",
                            "src": "1429:17:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct SolnSquareVerifier.solutions memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7725,
                                  "type": "type(struct SolnSquareVerifier.solutions storage pointer)",
                                  "value": "solutions"
                                },
                                "id": 7763,
                                "name": "Identifier",
                                "src": "1449:9:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7743,
                                  "type": "uint256",
                                  "value": "recievedIndex"
                                },
                                "id": 7764,
                                "name": "Identifier",
                                "src": "1459:13:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7745,
                                  "type": "address",
                                  "value": "recievedAddress"
                                },
                                "id": 7765,
                                "name": "Identifier",
                                "src": "1474:15:7"
                              }
                            ],
                            "id": 7766,
                            "name": "FunctionCall",
                            "src": "1449:41:7"
                          }
                        ],
                        "id": 7767,
                        "name": "Assignment",
                        "src": "1429:61:7"
                      }
                    ],
                    "id": 7768,
                    "name": "ExpressionStatement",
                    "src": "1429:61:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7731,
                              "type": "uint256",
                              "value": "counter"
                            },
                            "id": 7769,
                            "name": "Identifier",
                            "src": "1500:7:7"
                          }
                        ],
                        "id": 7770,
                        "name": "UnaryOperation",
                        "src": "1500:9:7"
                      }
                    ],
                    "id": 7771,
                    "name": "ExpressionStatement",
                    "src": "1500:9:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7741,
                              "type": "function (uint256,address)",
                              "value": "Added"
                            },
                            "id": 7772,
                            "name": "Identifier",
                            "src": "1524:5:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7743,
                              "type": "uint256",
                              "value": "recievedIndex"
                            },
                            "id": 7773,
                            "name": "Identifier",
                            "src": "1530:13:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7745,
                              "type": "address",
                              "value": "recievedAddress"
                            },
                            "id": 7774,
                            "name": "Identifier",
                            "src": "1545:15:7"
                          }
                        ],
                        "id": 7775,
                        "name": "FunctionCall",
                        "src": "1524:37:7"
                      }
                    ],
                    "id": 7776,
                    "name": "EmitStatement",
                    "src": "1519:42:7"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 7749
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 7777,
                        "name": "Literal",
                        "src": "1578:4:7"
                      }
                    ],
                    "id": 7778,
                    "name": "Return",
                    "src": "1571:11:7"
                  }
                ],
                "id": 7779,
                "name": "Block",
                "src": "1353:236:7"
              }
            ],
            "id": 7780,
            "name": "FunctionDefinition",
            "src": "1129:460:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "newMint",
              "scope": 7847,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7846,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7781,
                            "name": "ElementaryTypeName",
                            "src": "1859:4:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7782,
                            "name": "Literal",
                            "src": "1864:1:7"
                          }
                        ],
                        "id": 7783,
                        "name": "ArrayTypeName",
                        "src": "1859:7:7"
                      }
                    ],
                    "id": 7784,
                    "name": "VariableDeclaration",
                    "src": "1859:16:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7846,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 7785,
                                "name": "ElementaryTypeName",
                                "src": "1901:4:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 7786,
                                "name": "Literal",
                                "src": "1906:1:7"
                              }
                            ],
                            "id": 7787,
                            "name": "ArrayTypeName",
                            "src": "1901:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7788,
                            "name": "Literal",
                            "src": "1909:1:7"
                          }
                        ],
                        "id": 7789,
                        "name": "ArrayTypeName",
                        "src": "1901:10:7"
                      }
                    ],
                    "id": 7790,
                    "name": "VariableDeclaration",
                    "src": "1901:19:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7846,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7791,
                            "name": "ElementaryTypeName",
                            "src": "1946:4:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7792,
                            "name": "Literal",
                            "src": "1951:1:7"
                          }
                        ],
                        "id": 7793,
                        "name": "ArrayTypeName",
                        "src": "1946:7:7"
                      }
                    ],
                    "id": 7794,
                    "name": "VariableDeclaration",
                    "src": "1946:16:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7846,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7795,
                            "name": "ElementaryTypeName",
                            "src": "1988:4:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7796,
                            "name": "Literal",
                            "src": "1993:1:7"
                          }
                        ],
                        "id": 7797,
                        "name": "ArrayTypeName",
                        "src": "1988:7:7"
                      }
                    ],
                    "id": 7798,
                    "name": "VariableDeclaration",
                    "src": "1988:20:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7846,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7799,
                        "name": "ElementaryTypeName",
                        "src": "2034:7:7"
                      }
                    ],
                    "id": 7800,
                    "name": "VariableDeclaration",
                    "src": "2034:15:7"
                  }
                ],
                "id": 7801,
                "name": "ParameterList",
                "src": "1833:238:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 7846,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7802,
                        "name": "ElementaryTypeName",
                        "src": "2127:4:7"
                      }
                    ],
                    "id": 7803,
                    "name": "VariableDeclaration",
                    "src": "2127:4:7"
                  }
                ],
                "id": 7804,
                "name": "ParameterList",
                "src": "2126:6:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ca1d8660fcf8b1745372051b11db5b7c5b941e63563055b04647b4894f337aca",
                                  "typeString": "literal_string \"The solution is not unique\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10460,
                                10461
                              ],
                              "referencedDeclaration": 10461,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7805,
                            "name": "Identifier",
                            "src": "2147:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "Address",
                                  "referencedDeclaration": 7724,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.solutions storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7735,
                                          "type": "mapping(address => struct SolnSquareVerifier.solutions storage ref)",
                                          "value": "store"
                                        },
                                        "id": 7806,
                                        "name": "Identifier",
                                        "src": "2155:5:7"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10457,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 7807,
                                            "name": "Identifier",
                                            "src": "2161:3:7"
                                          }
                                        ],
                                        "id": 7808,
                                        "name": "MemberAccess",
                                        "src": "2161:10:7"
                                      }
                                    ],
                                    "id": 7809,
                                    "name": "IndexAccess",
                                    "src": "2155:17:7"
                                  }
                                ],
                                "id": 7810,
                                "name": "MemberAccess",
                                "src": "2155:25:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7811,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2184:7:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7812,
                                    "name": "Literal",
                                    "src": "2192:1:7"
                                  }
                                ],
                                "id": 7813,
                                "name": "FunctionCall",
                                "src": "2184:10:7"
                              }
                            ],
                            "id": 7814,
                            "name": "BinaryOperation",
                            "src": "2155:39:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "54686520736f6c7574696f6e206973206e6f7420756e69717565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"The solution is not unique\"",
                              "value": "The solution is not unique"
                            },
                            "id": 7815,
                            "name": "Literal",
                            "src": "2196:28:7"
                          }
                        ],
                        "id": 7816,
                        "name": "FunctionCall",
                        "src": "2147:78:7"
                      }
                    ],
                    "id": 7817,
                    "name": "ExpressionStatement",
                    "src": "2147:78:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_4f812e02b86c914f7ba6fd88be7cc41edc71b46da865e4abecf4e65bf0375cf0",
                                  "typeString": "literal_string \"Verification failed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10460,
                                10461
                              ],
                              "referencedDeclaration": 10461,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7818,
                            "name": "Identifier",
                            "src": "2235:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "verifyTx",
                                  "referencedDeclaration": 10441,
                                  "type": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7720,
                                      "type": "contract Verifier",
                                      "value": "verifier"
                                    },
                                    "id": 7819,
                                    "name": "Identifier",
                                    "src": "2243:8:7"
                                  }
                                ],
                                "id": 7820,
                                "name": "MemberAccess",
                                "src": "2243:17:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7784,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7821,
                                "name": "Identifier",
                                "src": "2261:1:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7790,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7822,
                                "name": "Identifier",
                                "src": "2264:1:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7794,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7823,
                                "name": "Identifier",
                                "src": "2267:1:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7798,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7824,
                                "name": "Identifier",
                                "src": "2270:5:7"
                              }
                            ],
                            "id": 7825,
                            "name": "FunctionCall",
                            "src": "2243:33:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "566572696669636174696f6e206661696c6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Verification failed\"",
                              "value": "Verification failed"
                            },
                            "id": 7826,
                            "name": "Literal",
                            "src": "2277:21:7"
                          }
                        ],
                        "id": 7827,
                        "name": "FunctionCall",
                        "src": "2235:64:7"
                      }
                    ],
                    "id": 7828,
                    "name": "ExpressionStatement",
                    "src": "2235:64:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7780,
                              "type": "function (uint256,address) returns (bool)",
                              "value": "addSolution"
                            },
                            "id": 7829,
                            "name": "Identifier",
                            "src": "2309:11:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7800,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7830,
                            "name": "Identifier",
                            "src": "2321:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10457,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7831,
                                "name": "Identifier",
                                "src": "2330:3:7"
                              }
                            ],
                            "id": 7832,
                            "name": "MemberAccess",
                            "src": "2330:10:7"
                          }
                        ],
                        "id": 7833,
                        "name": "FunctionCall",
                        "src": "2309:32:7"
                      }
                    ],
                    "id": 7834,
                    "name": "ExpressionStatement",
                    "src": "2309:32:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_mint",
                              "referencedDeclaration": 1069,
                              "type": "function (address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10514,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7835,
                                "name": "Identifier",
                                "src": "2351:5:7"
                              }
                            ],
                            "id": 7837,
                            "name": "MemberAccess",
                            "src": "2351:11:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10457,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7838,
                                "name": "Identifier",
                                "src": "2363:3:7"
                              }
                            ],
                            "id": 7839,
                            "name": "MemberAccess",
                            "src": "2363:10:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7800,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7840,
                            "name": "Identifier",
                            "src": "2375:7:7"
                          }
                        ],
                        "id": 7841,
                        "name": "FunctionCall",
                        "src": "2351:32:7"
                      }
                    ],
                    "id": 7842,
                    "name": "ExpressionStatement",
                    "src": "2351:32:7"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 7804
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 7843,
                        "name": "Literal",
                        "src": "2400:4:7"
                      }
                    ],
                    "id": 7844,
                    "name": "Return",
                    "src": "2393:11:7"
                  }
                ],
                "id": 7845,
                "name": "Block",
                "src": "2137:274:7"
              }
            ],
            "id": 7846,
            "name": "FunctionDefinition",
            "src": "1817:594:7"
          }
        ],
        "id": 7847,
        "name": "ContractDefinition",
        "src": "301:2115:7"
      }
    ],
    "id": 7848,
    "name": "SourceUnit",
    "src": "0:2440:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xc7B7f06BE87cB7159ffDb09B3A0cceF1Dcf7c8a4",
      "transactionHash": "0x9c60694cb10e08f4c7c06aa59f60c8b19202754d0b26a5ede1bb6e01fca226ce"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-05T16:36:48.894Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {
      "isOwner()": {
        "notice": "Check if the calling address is the owner of the contract"
      },
      "isPaused()": {
        "notice": "Check if the contract is Paused"
      }
    }
  }
}